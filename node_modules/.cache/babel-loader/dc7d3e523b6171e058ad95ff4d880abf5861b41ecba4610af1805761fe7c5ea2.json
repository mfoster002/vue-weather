{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"weather-wrap\"\n};\nconst _hoisted_4 = {\n  class: \"location-box\"\n};\nconst _hoisted_5 = {\n  class: \"location\"\n};\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"weather-box\"\n};\nconst _hoisted_8 = {\n  class: \"temp\"\n};\nconst _hoisted_9 = {\n  class: \"weather\"\n};\nconst _hoisted_10 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_FiveDayForecast = _resolveComponent(\"FiveDayForecast\");\n  const _component_Hourly = _resolveComponent(\"Hourly\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass($options.weatherClass)\n  }, [_createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-bar\",\n    placeholder: \"Search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    onKeypress: _cache[1] || (_cache[1] = (...args) => $options.fetchWeather && $options.fetchWeather(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.query]])]), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.weather.main && !_ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.weather.name) + \", \" + _toDisplayString($data.weather.sys.country), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($options.dateBuilder()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(Math.round($data.weather.main.temp)) + \"°f\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.weather.weather[0].main), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveLocation && $options.saveLocation(...args))\n  }, \"Save Location\"), _createCommentVNode(\" Replace this button with a router-link to navigate to the 5-day forecast \"), $data.weather.name ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: {\n      name: 'FiveDayView',\n      params: {\n        location: $data.weather.name\n      }\n    },\n    class: \"forecast-link\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" Go to 5-Day Forecast \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])) : _createCommentVNode(\"v-if\", true), $data.showForecast ? (_openBlock(), _createBlock(_component_FiveDayForecast, {\n    key: 1,\n    forecastData: $data.forecastData,\n    location: $data.weather.name\n  }, null, 8 /* PROPS */, [\"forecastData\", \"location\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Hourly, {\n    hourlyData: _ctx.hourlyData\n  }, null, 8 /* PROPS */, [\"hourlyData\"]), $data.savedLocations && $data.savedLocations.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Saved Locations:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.savedLocations, (location, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(location), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","id","_normalizeClass","$options","weatherClass","_createElementVNode","_hoisted_1","type","placeholder","_cache","$event","$data","query","onKeypress","args","fetchWeather","_ctx","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","weather","main","_hoisted_3","_hoisted_4","_hoisted_5","name","sys","country","_hoisted_6","dateBuilder","_hoisted_7","_hoisted_8","Math","round","temp","_hoisted_9","onClick","saveLocation","_createBlock","_component_router_link","to","params","location","default","_withCtx","_createTextVNode","_","showForecast","_component_FiveDayForecast","forecastData","_createVNode","_component_Hourly","hourlyData","savedLocations","length","_hoisted_10","_Fragment","_renderList","index"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"weatherClass\">\n    <main>\n      <div class=\"search-box\">\n        <input \n          type=\"text\" \n          class=\"search-bar\" \n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\" \n        />\n      </div>\n\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n      <div class=\"weather-wrap\" v-if=\"weather.main && !errorMessage\">\n        <div class=\"location-box\">\n          <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}°f</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n\n        <button @click=\"saveLocation\">Save Location</button>\n\n        <!-- Replace this button with a router-link to navigate to the 5-day forecast -->\n        <router-link \n          v-if=\"weather.name\" \n          :to=\"{ name: 'FiveDayView', params: { location: weather.name } }\" \n          class=\"forecast-link\"\n        >\n          Go to 5-Day Forecast\n        </router-link>\n\n        <FiveDayForecast v-if=\"showForecast\" :forecastData=\"forecastData\" :location=\"weather.name\" />  \n        <Hourly :hourlyData=\"hourlyData\" />\n\n        <div v-if=\"savedLocations && savedLocations.length\">         \n          <h3>Saved Locations:</h3>\n          <ul>\n            <li v-for=\"(location, index) in savedLocations\" :key=\"index\">{{ location }}</li>\n          </ul>  \n        </div>\n      </div>  \n    </main>\n  </div>\n</template>\n\n<script>\nimport FiveDayForecast from '@/components/FiveDayForecast.vue';\nimport Hourly from '@/components/Hourly.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    FiveDayForecast,\n    Hourly,\n  },\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      geoData: {},\n      savedLocations: [],\n      showForecast: false,\n    };\n  },\n\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0]?.main?.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist',\n      };\n\n      return conditionMap[weatherCondition] || 'default';\n    },\n  },\n\n  methods: {\n    fetchWeather(e) {\n      if (e.key === 'Enter' && this.query.trim() !== '') {\n        this.errorMessage = ''; // Reset error message before fetching data\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.cod !== 200) {\n              this.errorMessage = 'Location not found. Please try again.'; // Error handling\n              return;\n            }\n            this.weather = data;\n            this.fetchGeoData();\n            this.fetchForecastData(); \n            this.fetchHourlyData();\n          })\n          .catch((err) => {\n            this.errorMessage = 'Error fetching weather data. Please try again later.'; // Catching network errors\n            console.error(err);\n          });\n      }\n    },\n\n    fetchHourlyData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}onecall?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&exclude=current,minutely,daily,alerts&appid=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.hourlyData = data.hourly;\n          })\n          .catch((err) => {\n            console.error('Error fetching hourly data:', err);\n            this.errorMessage = 'Error fetching hourly data.';\n          });\n      }\n    },\n\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            const { name, state, country } = data[0];\n            this.geoData = { name, state, country };\n          }\n        })\n        .catch((err) => {\n          console.error('Error fetching geo data:', err);\n          this.errorMessage = 'Error fetching geo data.';\n        });\n    },\n\n    fetchForecastData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}forecast?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&cnt=5&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.forecastData = data.list.map(item => ({\n              day: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n              high: item.main.temp_max,\n              low: item.main.temp_min,\n            }));\n          })\n          .catch((err) => {\n            console.error('Error fetching forecast data:', err);\n            this.errorMessage = 'Error fetching forecast data.';\n          });\n      }\n    },\n\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n      }\n    },\n\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      return now.toLocaleDateString('en-US', options);\n    },\n  },\n};\n</script>\n\n<style>\n/* Add some basic styling for the router-link */\n.forecast-link {\n  display: inline-block;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #3498db;\n  color: white;\n  text-decoration: none;\n  border-radius: 5px;\n  text-align: center;\n}\n\n.forecast-link:hover {\n  background-color: #2980b9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}