{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"five-day-forecast\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.location) + \" - 5-Day Forecast\", 1 /* TEXT */), _createCommentVNode(\" Chart.js Bar Chart \"), _cache[0] || (_cache[0] = _createElementVNode(\"canvas\", {\n    id: \"forecast-chart\",\n    width: \"400\",\n    height: \"200\"\n  }, null, -1 /* HOISTED */)), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","location","_createCommentVNode","id","width","height","errorMessage","_hoisted_2"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n<div class=\"five-day-forecast\">\n  <h2>{{ location }} - 5-Day Forecast</h2>\n  \n  <!-- Chart.js Bar Chart -->\n  <canvas id=\"forecast-chart\" width=\"400\" height=\"200\"></canvas>\n\n  <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n  \n</div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { Chart } from 'chart.js';\nimport { useRoute } from 'vue-router';\n\nexport default defineComponent({\n  name: 'FiveDayForecast',\n  setup() {\n    const route = useRoute(); // Access the query params from Vue Router\n    const location = ref(route.query.location || ''); // Get location from the query parameter\n    const forecastData = ref([]);\n    const errorMessage = ref('');\n\n    onMounted(() => {\n      if (location.value) {\n        fetchForecastData();\n      } else {\n        errorMessage.value = 'No location provided.';\n      }\n    });\n\n    const fetchForecastData = () => {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=6c07b7050c30876a4e88cfbb4dee8dc3`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== '200') {\n            errorMessage.value = 'Unable to fetch forecast data.';\n            return;\n          }\n          forecastData.value = data.list.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString(),\n            temp: item.main.temp,\n          }));\n          createChart();\n        })\n        .catch((err) => {\n          errorMessage.value = 'Error fetching forecast data.';\n          console.error(err);\n        });\n    };\n\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map((item) => item.date),\n          datasets: [\n            {\n              label: 'Temperature (Â°F)',\n              data: forecastData.value.map((item) => item.temp),\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    return {\n      location,\n      forecastData,\n      errorMessage,\n    };\n  },\n});\n</script>\n<style scoped>\n.forecast-background {\n   background-image: url('@/assets/cloudy.jpg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n}\n\n.forecast-content {\n  padding: 20px;\n  text-align: center;\n}\n\n.five-day-forecast {\n  padding: 20px;\n  text-align: center;\n}\n\n.error-message {\n  color: red;\n  margin-top: 20px;\n}\n</style>\n\n\n"],"mappings":";;EACKA,KAAK,EAAC;AAAmB;;EAD9BC,GAAA;EAO2BD,KAAK,EAAC;;;uBANjCE,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAAwC,YAAAC,gBAAA,CAAjCC,IAAA,CAAAC,QAAQ,IAAG,mBAAiB,iBAEnCC,mBAAA,wBAA2B,E,0BAC3BJ,mBAAA,CAA8D;IAAtDK,EAAE,EAAC,gBAAgB;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;+BAEpCL,IAAA,CAAAM,YAAY,I,cAAvBV,mBAAA,CAAuE,OAAvEW,UAAuE,EAAAR,gBAAA,CAArBC,IAAA,CAAAM,YAAY,oBAPhEJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}