{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"weather-wrap\"\n};\nconst _hoisted_3 = {\n  class: \"location-box\"\n};\nconst _hoisted_4 = {\n  class: \"location\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"weather-box\"\n};\nconst _hoisted_8 = {\n  class: \"temp\"\n};\nconst _hoisted_9 = {\n  class: \"weather\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  class: \"button-navigation\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass($options.weatherClass)\n  }, [_createElementVNode(\"main\", null, [_createCommentVNode(\" Search Bar \"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-bar\",\n    placeholder: \"Search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    onKeypress: _cache[1] || (_cache[1] = (...args) => $options.fetchWeather && $options.fetchWeather(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.query]])]), _createCommentVNode(\" Weather Information \"), $data.weather.main ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createTextVNode(_toDisplayString($data.weather.name) + \", \", 1 /* TEXT */), $data.geoData.state ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.geoData.state) + \", \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($data.geoData.country), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($options.dateBuilder()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(Math.round($data.weather.main.temp)) + \"°f\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.weather.weather[0].main), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveLocation && $options.saveLocation(...args))\n  }, \"Save Location\"), _createCommentVNode(\" Saved Locations \"), $data.savedLocations.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Saved Locations:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.savedLocations, (location, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(location), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Navigation Buttons \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.navigateTo('/'))\n  }, \"Home\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.navigateTo('/hourly'))\n  }, \"Hourly\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.navigateTo('/5day'))\n  }, \"5-Day Forecast\")])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","id","_normalizeClass","$options","weatherClass","_createElementVNode","_createCommentVNode","_hoisted_1","type","placeholder","_cache","$event","$data","query","onKeypress","args","fetchWeather","weather","main","_hoisted_2","_hoisted_3","_hoisted_4","_createTextVNode","_toDisplayString","name","geoData","state","_hoisted_5","country","_hoisted_6","dateBuilder","_hoisted_7","_hoisted_8","Math","round","temp","_hoisted_9","onClick","saveLocation","savedLocations","length","_hoisted_10","_Fragment","_renderList","location","index","_hoisted_11","navigateTo"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"weatherClass\">\n    <main>\n      <!-- Search Bar -->\n      <div class=\"search-box\">\n        <input \n          type=\"text\" \n          class=\"search-bar\" \n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\"\n        />\n      </div>\n\n      <!-- Weather Information -->\n      <div class=\"weather-wrap\" v-if=\"weather.main\">\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }}, \n            <span v-if=\"geoData.state\">{{ geoData.state }}, </span>\n            {{ geoData.country }}\n          </div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}°f</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n\n        <button @click=\"saveLocation\">Save Location</button>\n\n        <!-- Saved Locations -->\n        <div v-if=\"savedLocations.length\">\n          <h3>Saved Locations:</h3>\n          <ul>\n            <li v-for=\"(location, index) in savedLocations\" :key=\"index\">\n              {{ location }}\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- Navigation Buttons -->\n      <div class=\"button-navigation\">\n        <button @click=\"navigateTo('/')\">Home</button>\n        <button @click=\"navigateTo('/hourly')\">Hourly</button>\n        <button @click=\"navigateTo('/5day')\">5-Day Forecast</button>\n      </div>\n    </main>\n  </div>\n</template>\n\n---\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      geoData: {}, // For city, state, and country data\n      savedLocations: [] // To store saved locations\n    };\n  },\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0].main.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist',\n      };\n\n      return conditionMap[weatherCondition] || 'default';\n    }\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key === \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n          .then(res => res.json())\n          .then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n      this.fetchGeoData(); // Fetch city, state, and country data\n    },\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`)\n        .then(res => res.json())\n        .then(data => {\n          if (data[0]) {\n            const { name, state, country } = data[0];\n            this.geoData = { name, state, country };\n          }\n        });\n    },\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        console.log('Saved Locations:', this.savedLocations);\n      }\n    },\n    navigateTo(route) {\n      this.$router.push(route);\n    },\n    dateBuilder() {\n      const d = new Date();\n      const months = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n      const days = [\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n      ];\n\n      const day = days[d.getDay()];\n      const date = d.getDate();\n      const month = months[d.getMonth()];\n      const year = d.getFullYear();\n\n      return `${day} ${date} ${month} ${year}`;\n    }\n  }\n};\n</script>\n\n---\n\n<style>\n/* General Styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n#app {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n/* Dynamic Backgrounds */\n#app.default {\n  background-image: url('./assets/default.jpg');\n}\n#app.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n#app.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n#app.rain {\n  background-image: url('./assets/rain.jpg');\n}\n/* Add other weather condition styles as needed */\n\n/* Search Box */\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n.search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  font-size: 20px;\n  border: none;\n  border-radius: 16px;\n  background: rgba(255, 255, 255, 0.5);\n  transition: 0.4s;\n}\n.search-bar:focus {\n  background: rgba(255, 255, 255, 0.75);\n}\n\n/* Weather Information */\n.location-box {\n  text-align: center;\n  color: #fff;\n}\n.weather-box .temp {\n  font-size: 64px;\n  font-weight: bold;\n  text-align: center;\n}\n.weather-box .weather {\n  font-size: 32px;\n  text-align: center;\n}\n\n/* Navigation Buttons */\n.button-navigation {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n.button-navigation button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n.button-navigation button:hover {\n  background: #0056b3;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}