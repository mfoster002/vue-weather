{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: 'HourlyForecast',\n  components: {\n    Bar\n  },\n  props: {\n    location: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      hourlyData: [],\n      chartData: {\n        labels: [],\n        datasets: []\n      },\n      chartOptions: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  mounted() {\n    this.fetchHourlyData();\n  },\n  methods: {\n    fetchHourlyData() {\n      const apiKey = 'YOUR_API_KEY';\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=51.5085&lon=-0.1257&units=imperial&exclude=current,minutely,daily,alerts&appid=${apiKey}`;\n      fetch(url).then(res => res.json()).then(data => {\n        this.hourlyData = data.hourly;\n        this.updateChartData();\n      }).catch(err => console.error('Error fetching hourly data:', err));\n    },\n    updateChartData() {\n      this.chartData.labels = this.hourlyData.map(data => new Date(data.dt * 1000).toLocaleTimeString());\n      this.chartData.datasets = [{\n        label: 'Temperature (°F)',\n        data: this.hourlyData.map(data => data.temp),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)'\n      }, {\n        label: 'Rain (mm)',\n        data: this.hourlyData.map(data => data.rain ? data.rain['1h'] : 0),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)'\n      }];\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","props","location","type","String","required","data","hourlyData","chartData","labels","datasets","chartOptions","responsive","scales","y","beginAtZero","mounted","fetchHourlyData","methods","apiKey","url","fetch","then","res","json","hourly","updateChartData","catch","err","console","error","map","Date","dt","toLocaleTimeString","label","temp","backgroundColor","rain","goBack","$router","go"],"sources":["/Users/marianfoster/vue-weather/src/views/HourlyForecast.vue"],"sourcesContent":["<template>\n  <div class=\"hourly-forecast-container\">\n    <h2>Hourly Forecast for {{ location }}</h2>\n    <Bar :data=\"chartData\" :options=\"chartOptions\" v-if=\"hourlyData.length\" />\n    <p v-else>No hourly data available.</p>\n    <button @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  name: 'HourlyForecast',\n  components: { Bar },\n  props: { location: { type: String, required: true } },\n  data() {\n    return {\n      hourlyData: [],\n      chartData: { labels: [], datasets: [] },\n      chartOptions: { responsive: true, scales: { y: { beginAtZero: true } } },\n    };\n  },\n  mounted() {\n    this.fetchHourlyData();\n  },\n  methods: {\n    fetchHourlyData() {\n      const apiKey = 'YOUR_API_KEY';\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=51.5085&lon=-0.1257&units=imperial&exclude=current,minutely,daily,alerts&appid=${apiKey}`;\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          this.hourlyData = data.hourly;\n          this.updateChartData();\n        })\n        .catch((err) => console.error('Error fetching hourly data:', err));\n    },\n    updateChartData() {\n      this.chartData.labels = this.hourlyData.map((data) => new Date(data.dt * 1000).toLocaleTimeString());\n      this.chartData.datasets = [\n        { label: 'Temperature (°F)', data: this.hourlyData.map((data) => data.temp), backgroundColor: 'rgba(75, 192, 192, 0.6)' },\n        { label: 'Rain (mm)', data: this.hourlyData.map((data) => data.rain ? data.rain['1h'] : 0), backgroundColor: 'rgba(54, 162, 235, 0.6)' },\n      ];\n    },\n    goBack() { this.$router.go(-1); },\n  },\n};\n</script>\n\n<style scoped>\n.hourly-forecast-container { padding: 20px; text-align: center; }\n</style>\n"],"mappings":";AAUA,SAASA,GAAE,QAAS,aAAa;AACjC,SACEC,KAAI,IAAKC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACN,UAAU;AAEjBN,OAAO,CAACO,QAAQ,CAACN,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEhF,eAAe;EACbE,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAAEX;EAAI,CAAC;EACnBY,KAAK,EAAE;IAAEC,QAAQ,EAAE;MAAEC,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAK;EAAE,CAAC;EACrDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACvCC,YAAY,EAAE;QAAEC,UAAU,EAAE,IAAI;QAAEC,MAAM,EAAE;UAAEC,CAAC,EAAE;YAAEC,WAAW,EAAE;UAAK;QAAE;MAAE;IACzE,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,MAAK,GAAI,cAAc;MAC7B,MAAMC,GAAE,GAAI,sIAAsID,MAAM,EAAE;MAC1JE,KAAK,CAACD,GAAG,EACNE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEhB,IAAI,IAAK;QACd,IAAI,CAACC,UAAS,GAAID,IAAI,CAACmB,MAAM;QAC7B,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;IACtE,CAAC;IACDF,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAClB,SAAS,CAACC,MAAK,GAAI,IAAI,CAACF,UAAU,CAACwB,GAAG,CAAEzB,IAAI,IAAK,IAAI0B,IAAI,CAAC1B,IAAI,CAAC2B,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;MACpG,IAAI,CAAC1B,SAAS,CAACE,QAAO,GAAI,CACxB;QAAEyB,KAAK,EAAE,kBAAkB;QAAE7B,IAAI,EAAE,IAAI,CAACC,UAAU,CAACwB,GAAG,CAAEzB,IAAI,IAAKA,IAAI,CAAC8B,IAAI,CAAC;QAAEC,eAAe,EAAE;MAA0B,CAAC,EACzH;QAAEF,KAAK,EAAE,WAAW;QAAE7B,IAAI,EAAE,IAAI,CAACC,UAAU,CAACwB,GAAG,CAAEzB,IAAI,IAAKA,IAAI,CAACgC,IAAG,GAAIhC,IAAI,CAACgC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;QAAED,eAAe,EAAE;MAA0B,CAAC,CACzI;IACH,CAAC;IACDE,MAAMA,CAAA,EAAG;MAAE,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IAAE;EAClC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}