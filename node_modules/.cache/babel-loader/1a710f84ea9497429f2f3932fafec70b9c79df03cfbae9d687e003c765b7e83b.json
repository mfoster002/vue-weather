{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"five-day-forecast\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  id: \"forecast-chart\",\n  width: \"400\",\n  height: \"200\"\n};\nconst _hoisted_5 = {\n  key: 3,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.location ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, _toDisplayString($setup.location) + \" - 5-Day Forecast\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.forecastData.length ? (_openBlock(), _createElementBlock(\"canvas\", _hoisted_4)) : _createCommentVNode(\"v-if\", true), !$setup.location ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" No location provided. Please search for a city first. \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n  }, \"Go Back\")]);\n}","map":{"version":3,"names":["class","key","id","width","height","_createElementBlock","_hoisted_1","$setup","location","_hoisted_2","_toDisplayString","_createCommentVNode","errorMessage","_hoisted_3","forecastData","length","_hoisted_4","_hoisted_5","_createElementVNode","onClick","_cache","$event","_ctx","$router","go"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n  <div class=\"five-day-forecast\">\n    <h2 v-if=\"location\">{{ location }} - 5-Day Forecast</h2>\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n    \n    <canvas v-if=\"forecastData.length\" id=\"forecast-chart\" width=\"400\" height=\"200\"></canvas>\n    \n    <div v-if=\"!location\" class=\"error-message\">\n      No location provided. Please search for a city first.\n    </div>\n    \n    <button @click=\"$router.go(-1)\">Go Back</button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { Chart } from 'chart.js';\n\nexport default {\n  name: 'FiveDayForecast',\n  setup(props) {\n    const route = useRoute();\n    const location = ref(route.params.location);\n    const forecastData = ref([]);\n    const errorMessage = ref('');\n\n    const fetchForecastData = () => {\n      if (!location.value) {\n        errorMessage.value = 'No location provided.';\n        return;\n      }\n\n      const apiKey = '6c07b7050c30876a4e88cfbb4dee8dc3';\n      const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=${apiKey}`;\n\n      fetch(apiUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== '200') {\n            errorMessage.value = 'Unable to fetch forecast data.';\n            return;\n          }\n          \n          forecastData.value = data.list.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString(),\n            temp: item.main.temp,\n          }));\n          \n          createChart();\n        })\n        .catch((err) => {\n          errorMessage.value = 'Error fetching forecast data.';\n          console.error(err);\n        });\n    };\n\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map((item) => item.date),\n          datasets: [{\n            label: 'Temperature (Â°F)',\n            data: forecastData.value.map((item) => item.temp),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          }],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    // Watch for location changes\n    watch(location, (newLocation) => {\n      if (newLocation) {\n        fetchForecastData();\n      }\n    }, { immediate: true });\n\n    return {\n      location,\n      forecastData,\n      errorMessage,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.five-day-forecast {\n  padding: 20px;\n  text-align: center;\n}\n\n.error-message {\n  color: red;\n  margin-top: 20px;\n}\n</style>\n\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EADhCC,GAAA;AAAA;;EAAAA,GAAA;EAG6BD,KAAK,EAAC;;;EAHnCC,GAAA;EAKuCC,EAAE,EAAC,gBAAgB;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;EAL9EH,GAAA;EAO0BD,KAAK,EAAC;;;uBAN9BK,mBAAA,CAWM,OAXNC,UAWM,GAVMC,MAAA,CAAAC,QAAQ,I,cAAlBH,mBAAA,CAAwD,MAF5DI,UAAA,EAAAC,gBAAA,CAE2BH,MAAA,CAAAC,QAAQ,IAAG,mBAAiB,mBAFvDG,mBAAA,gBAGeJ,MAAA,CAAAK,YAAY,I,cAAvBP,mBAAA,CAAuE,OAAvEQ,UAAuE,EAAAH,gBAAA,CAArBH,MAAA,CAAAK,YAAY,oBAHlED,mBAAA,gBAKkBJ,MAAA,CAAAO,YAAY,CAACC,MAAM,I,cAAjCV,mBAAA,CAAyF,UAAzFW,UAAyF,KAL7FL,mBAAA,gB,CAOgBJ,MAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAEM,OAFNY,UAEM,EAFsC,yDAE5C,KATJN,mBAAA,gBAWIO,mBAAA,CAAgD;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,EAAE;KAAM,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}