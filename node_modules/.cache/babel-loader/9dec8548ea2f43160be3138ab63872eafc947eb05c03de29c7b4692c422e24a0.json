{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"saved-locations-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 2\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"My Saved Locations\", -1 /* HOISTED */)), _createCommentVNode(\" Display the list of saved locations \"), _ctx.savedLocations.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.savedLocations, (location, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString(location) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteLocation(index)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.viewForecast(location)\n    }, \"View Forecast\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" No locations saved message \"), _cache[2] || (_cache[2] = _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"No locations saved.\")], -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Location from query parameter \"), _ctx.location ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"Location from URL query: \" + _toDisplayString(_ctx.location), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.viewForecast(_ctx.location))\n  }, \"View Forecast for Query Location\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Go back button \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.goBack && _ctx.goBack(...args))\n  }, \"Go Back\")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_ctx","savedLocations","length","_hoisted_2","_Fragment","_renderList","location","index","_createTextVNode","_toDisplayString","onClick","$event","deleteLocation","_hoisted_3","viewForecast","_hoisted_4","_hoisted_5","_cache","args","goBack"],"sources":["/Users/marianfoster/vue-weather/src/views/MySavedLocations.vue"],"sourcesContent":["<template>\n    <div class=\"saved-locations-container\">\n      <h2>My Saved Locations</h2>\n  \n      <!-- Display the list of saved locations -->\n      <div v-if=\"savedLocations.length > 0\">\n        <ul>\n          <li v-for=\"(location, index) in savedLocations\" :key=\"index\">\n            {{ location }}\n            <button @click=\"deleteLocation(index)\">Delete</button>\n            <button @click=\"viewForecast(location)\">View Forecast</button>\n          </li>\n        </ul>\n      </div>\n      \n      <!-- No locations saved message -->\n      <div v-else>\n        <p>No locations saved.</p>\n      </div>\n  \n      <!-- Location from query parameter -->\n      <div v-if=\"location\">\n        <p>Location from URL query: {{ location }}</p>\n        <button @click=\"viewForecast(location)\">View Forecast for Query Location</button>\n      </div>\n      \n      <!-- Go back button -->\n      <button @click=\"goBack\">Go Back</button>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted } from 'vue';\n  import { useRouter, useRoute } from 'vue-router';\n  \n  export default {\n    name: 'MySavedLocations',\n    setup() {\n      const router = useRouter();\n      const route = useRoute();\n      const savedLocations = ref([]); // This will store the saved locations\n      const location = ref(route.query.location || ''); // Get location from the URL query parameter\n      \n      const viewForecast = (location) => {\n  router.push({ name: 'forecast', query: { location: location } });\n};\n\n      // Load saved locations from localStorage on mount\n      onMounted(() => {\n        const saved = JSON.parse(localStorage.getItem('savedLocations')) || [];\n        savedLocations.value = saved;\n      });\n  \n      // Delete a location from the saved list\n      const deleteLocation = (index) => {\n        savedLocations.value.splice(index, 1);\n        // Update the saved locations in localStorage\n        localStorage.setItem('savedLocations', JSON.stringify(savedLocations.value));\n      };\n  \n      // View forecast for a selected location\n      const viewForecast = (location) => {\n        router.push({ name: 'forecast', query: { location } }); // Assuming your forecast route accepts location as a query parameter\n      };\n  \n      // Go back to the previous page\n      const goBack = () => {\n        router.go(-1);\n      };\n  \n      return {\n        savedLocations,\n        location,\n        deleteLocation,\n        viewForecast,\n        goBack,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .saved-locations-container {\n    padding: 20px;\n    text-align: center;\n  }\n  \n  h2 {\n    margin-bottom: 20px;\n  }\n  \n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  li {\n    margin: 10px 0;\n  }\n  \n  button {\n    margin-left: 10px;\n    padding: 5px 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  button:hover {\n    background-color: #45a049;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAA2B;;EAD1CC,GAAA;AAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBAEtBC,mBAAA,yCAA4C,EACjCC,IAAA,CAAAC,cAAc,CAACC,MAAM,Q,cAAhCN,mBAAA,CAQM,OAbZO,UAAA,GAMQL,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKQ,SAAA,QAXfC,WAAA,CAO0CL,IAAA,CAAAC,cAAc,EAPxD,CAOsBK,QAAQ,EAAEC,KAAK;yBAA3BX,mBAAA,CAIK;MAJ4CD,GAAG,EAAEY;IAAK,IAPrEC,gBAAA,CAAAC,gBAAA,CAQeH,QAAQ,IAAG,GACd,iBAAAR,mBAAA,CAAsD;MAA7CY,OAAK,EAAAC,MAAA,IAAEX,IAAA,CAAAY,cAAc,CAACL,KAAK;OAAG,QAAM,iBATzDM,UAAA,GAUYf,mBAAA,CAA8D;MAArDY,OAAK,EAAAC,MAAA,IAAEX,IAAA,CAAAc,YAAY,CAACR,QAAQ;OAAG,eAAa,iBAVjES,UAAA,E;uDAgBMnB,mBAAA,CAEMQ,SAAA;IAlBZT,GAAA;EAAA,IAeMI,mBAAA,gCAAmC,E,0BACnCD,mBAAA,CAEM,cADJA,mBAAA,CAA0B,WAAvB,qBAAmB,E,wEAGxBC,mBAAA,mCAAsC,EAC3BC,IAAA,CAAAM,QAAQ,I,cAAnBV,mBAAA,CAGM,OAxBZoB,UAAA,GAsBQlB,mBAAA,CAA8C,WAA3C,2BAAyB,GAAAW,gBAAA,CAAGT,IAAA,CAAAM,QAAQ,kBACvCR,mBAAA,CAAiF;IAAxEY,OAAK,EAAAO,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAEX,IAAA,CAAAc,YAAY,CAACd,IAAA,CAAAM,QAAQ;KAAG,kCAAgC,E,KAvBhFP,mBAAA,gBA0BMA,mBAAA,oBAAuB,EACvBD,mBAAA,CAAwC;IAA/BY,OAAK,EAAAO,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAElB,IAAA,CAAAmB,MAAA,IAAAnB,IAAA,CAAAmB,MAAA,IAAAD,IAAA,CAAM;KAAE,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}