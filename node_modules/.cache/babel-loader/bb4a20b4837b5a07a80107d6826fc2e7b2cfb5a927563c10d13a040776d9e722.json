{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport FiveDayForecast from '@/components/FiveDayForecast.vue';\nimport Hourly from '@/components/Hourly.vue';\nexport default {\n  name: 'App',\n  components: {\n    FiveDayForecast,\n    Hourly\n  },\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      weatherClass: '',\n      forecastData: [],\n      hourlyData: [],\n      geoData: {},\n      savedLocations: [],\n      errorMessage: '',\n      location: ''\n    };\n  },\n  methods: {\n    methods: {\n      fetchWeather() {\n        if (this.query.trim() !== '') {\n          this.errorMessage = '';\n          fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n            if (data.cod !== 200) {\n              this.errorMessage = 'Location not found. Please try again.';\n              return;\n            }\n            this.weather = data;\n            this.setWeatherClass(); // Set background class\n            this.fetchForecastData();\n            this.fetchHourlyData();\n          }).catch(err => {\n            this.errorMessage = 'Error fetching weather data. Please try again later.';\n            console.error(err);\n          });\n        }\n      },\n      fetchForecastData() {\n        fetch(`${this.url_base}forecast?q=${this.query}&units=imperial&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          // Filter forecast data to get one entry per day\n          this.forecastData = data.list.filter((reading, index) => index % 8 === 0 // OpenWeatherMap provides 3-hour interval forecasts\n          );\n        }).catch(err => {\n          console.error('Error fetching forecast data:', err);\n        });\n      },\n      fetchHourlyData() {\n        fetch(`${this.url_base}forecast?q=${this.query}&units=imperial&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          // Get first 8 entries for next 24 hours (3-hour intervals)\n          this.hourlyData = data.list.slice(0, 8);\n        }).catch(err => {\n          console.error('Error fetching hourly data:', err);\n        });\n      },\n      setWeatherClass() {\n        if (this.weather.weather && this.weather.weather[0]) {\n          const weatherMain = this.weather.weather[0].main.toLowerCase();\n          this.weatherClass = ['default', 'clouds', 'clear', 'mist', 'snow', 'rain', 'drizzle', 'thunderstorm'].includes(weatherMain) ? weatherMain : 'default';\n        }\n      }\n    },\n    navigateTo5Day() {\n      if (this.weather.name) {\n        // Use router.push with an object that includes params\n        this.$router.push({\n          name: 'FiveDayForecast',\n          params: {\n            location: this.weather.name\n          }\n        });\n      } else {\n        this.errorMessage = 'Please enter a valid location first.';\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return now.toLocaleDateString('en-US', options);\n    },\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        // Optionally, you can save this data to localStorage\n        localStorage.setItem('savedLocations', JSON.stringify(this.savedLocations));\n      }\n    }\n  },\n  created() {\n    const saved = localStorage.getItem('savedLocations');\n    if (saved) {\n      this.savedLocations = JSON.parse(saved);\n    }\n  }\n};","map":{"version":3,"names":["FiveDayForecast","Hourly","name","components","data","api_key","url_base","query","weather","weatherClass","forecastData","hourlyData","geoData","savedLocations","errorMessage","location","methods","fetchWeather","trim","fetch","then","res","json","cod","setWeatherClass","fetchForecastData","fetchHourlyData","catch","err","console","error","list","filter","reading","index","slice","weatherMain","main","toLowerCase","includes","navigateTo5Day","$router","push","params","dateBuilder","now","Date","options","weekday","year","month","day","toLocaleDateString","saveLocation","localStorage","setItem","JSON","stringify","created","saved","getItem","parse"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div :class=\"['main-container', weatherClass]\">\n      <main>\n        <div class=\"search-box\">\n          <input \n            type=\"text\" \n            class=\"search-bar\" \n            placeholder=\"Search...\"\n            v-model=\"query\"\n            @keypress.enter=\"fetchWeather\" \n          />\n        </div>\n\n        <div v-if=\"$route.name !== 'FiveDayForecast' && weather.main && !errorMessage\" class=\"weather-wrap\">\n\n          <div class=\"location-box\">\n            <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n            <div class=\"date\">{{ dateBuilder() }}</div>\n          </div>\n       \n          <div class=\"weather-box\">\n            <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°f</div>\n            <div class=\"weather\">{{ weather.weather[0].main }}</div>\n          </div>\n\n          <button @click=\"saveLocation\">Save Location</button>\n          <button @click=\"navigateTo5Day\">Show 5-day Forecast</button>\n\n          <div v-if=\"Array.isArray(hourlyData) && hourlyData.length\">\n            <Hourly :hourlyData=\"hourlyData\" />\n          </div>\n\n          <div v-if=\"Array.isArray(forecastData) && forecastData.length\">\n            <FiveDayForecast \n              :forecastData=\"forecastData\" \n              :location=\"weather.name\" \n            />\n          </div>\n\n          <div v-if=\"savedLocations && savedLocations.length\">\n            <h3>Saved Locations:</h3>\n            <ul>\n              <li v-for=\"(location, index) in savedLocations\" :key=\"index\">{{ location }}</li>\n            </ul>\n          </div>\n        </div>  \n        <router-view></router-view> \n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FiveDayForecast from '@/components/FiveDayForecast.vue';\nimport Hourly from '@/components/Hourly.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    FiveDayForecast,\n    Hourly,\n  },\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      weatherClass: '',\n      forecastData: [],\n      hourlyData: [], \n      geoData: {},\n      savedLocations: [],\n      errorMessage: '', \n      location: '',\n    };\n  },\n\n  methods: {\n    methods: {\n  fetchWeather() {\n    if (this.query.trim() !== '') {\n      this.errorMessage = '';\n      fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== 200) {\n            this.errorMessage = 'Location not found. Please try again.';\n            return;\n          }\n          this.weather = data;\n          this.setWeatherClass(); // Set background class\n          this.fetchForecastData();\n          this.fetchHourlyData();\n        })\n        .catch((err) => {\n          this.errorMessage = 'Error fetching weather data. Please try again later.';\n          console.error(err);\n        });\n    }\n  },\n\n  fetchForecastData() {\n    fetch(`${this.url_base}forecast?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n      .then(res => res.json())\n      .then(data => {\n        // Filter forecast data to get one entry per day\n        this.forecastData = data.list.filter((reading, index) => \n          index % 8 === 0 // OpenWeatherMap provides 3-hour interval forecasts\n        );\n      })\n      .catch(err => {\n        console.error('Error fetching forecast data:', err);\n      });\n  },\n\n  fetchHourlyData() {\n    fetch(`${this.url_base}forecast?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n      .then(res => res.json())\n      .then(data => {\n        // Get first 8 entries for next 24 hours (3-hour intervals)\n        this.hourlyData = data.list.slice(0, 8);\n      })\n      .catch(err => {\n        console.error('Error fetching hourly data:', err);\n      });\n  },\n\n  setWeatherClass() {\n    if (this.weather.weather && this.weather.weather[0]) {\n      const weatherMain = this.weather.weather[0].main.toLowerCase();\n      this.weatherClass = ['default', 'clouds', 'clear', 'mist', 'snow', 'rain', 'drizzle', 'thunderstorm'].includes(weatherMain) \n        ? weatherMain \n        : 'default';\n    }\n  },\n},\n\n    navigateTo5Day() {\n    if (this.weather.name) {\n      // Use router.push with an object that includes params\n      this.$router.push({ \n        name: 'FiveDayForecast', \n        params: { location: this.weather.name } \n      });\n    } else {\n      this.errorMessage = 'Please enter a valid location first.';\n    }\n  },\n\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      return now.toLocaleDateString('en-US', options);\n    },\n\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        // Optionally, you can save this data to localStorage\n        localStorage.setItem('savedLocations', JSON.stringify(this.savedLocations));\n      }\n    },\n  },\n\n  created() {\n    const saved = localStorage.getItem('savedLocations');\n    if (saved) {\n      this.savedLocations = JSON.parse(saved);\n    }\n  },\n};\n\n</script>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n.main-container {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n.main-container.default {\n  background-image: url('./assets/default.jpg');\n}\n\n.main-container.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n.main-container.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n.main-container.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n.main-container.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n.main-container.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n.main-container.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n.main-container.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}