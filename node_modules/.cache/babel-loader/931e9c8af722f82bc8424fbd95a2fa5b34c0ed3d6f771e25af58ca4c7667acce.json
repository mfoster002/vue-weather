{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: 'FiveDayForecast',\n  props: {\n    location: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      forecastData: [],\n      errorMessage: ''\n    };\n  },\n  mounted() {\n    console.log('FiveDayForecast mounted');\n    this.fetchForecastData();\n  },\n  methods: {\n    fetchForecastData() {\n      console.log('Fetching forecast data for:', this.location);\n      const apiKey = '4df475f18aaaf4aba5fb2eb54246d4f8';\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.location}&units=imperial&appid=${apiKey}`;\n      fetch(url).then(res => res.json()).then(data => {\n        if (data.cod !== '200') {\n          this.errorMessage = 'Unable to fetch forecast data.';\n          console.log('Error fetching data:', data.message);\n          return;\n        }\n        console.log('Forecast data fetched:', data);\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.forecastData = dailyData.map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n            weekday: 'long'\n          }),\n          weather: item.weather[0].main,\n          high: item.main.temp_max,\n          low: item.main.temp_min\n        }));\n      }).catch(err => {\n        this.errorMessage = 'Error fetching forecast data.';\n        console.error(err);\n      });\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["name","props","location","type","String","required","data","forecastData","errorMessage","mounted","console","log","fetchForecastData","methods","apiKey","url","fetch","then","res","json","cod","message","dailyData","list","filter","reading","dt_txt","includes","map","item","date","Date","dt","toLocaleDateString","weekday","weather","main","high","temp_max","low","temp_min","catch","err","error","goBack","$router","go"],"sources":["/Users/marianfoster/vue-weather/src/views/5Day.vue"],"sourcesContent":["<template>\n  <div class=\"forecast-container\">\n    <h2>{{ location }} - 5 Day Forecast</h2>\n    <table v-if=\"forecastData.length\">\n      <thead>\n        <tr>\n          <th>Day</th>\n          <th>Weather</th>\n          <th>High (°F)</th>\n          <th>Low (°F)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"day in forecastData\" :key=\"day.date\">\n          <td>{{ day.date }}</td>\n          <td>{{ day.weather }}</td>\n          <td>{{ day.high }}</td>\n          <td>{{ day.low }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>Loading forecast...</p>\n    <button @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FiveDayForecast',\n  props: {\n    location: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      forecastData: [],\n      errorMessage: ''\n    };\n  },\n  mounted() {\n    console.log('FiveDayForecast mounted');\n    this.fetchForecastData();\n  },\n  methods: {\n    fetchForecastData() {\n      console.log('Fetching forecast data for:', this.location);\n      const apiKey = '4df475f18aaaf4aba5fb2eb54246d4f8';\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.location}&units=imperial&appid=${apiKey}`;\n      fetch(url)\n        .then(res => res.json())\n        .then(data => {\n          if (data.cod !== '200') {\n            this.errorMessage = 'Unable to fetch forecast data.';\n            console.log('Error fetching data:', data.message);\n            return;\n          }\n          console.log('Forecast data fetched:', data);\n          const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n          this.forecastData = dailyData.map(item => ({\n            date: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n            weather: item.weather[0].main,\n            high: item.main.temp_max,\n            low: item.main.temp_min,\n          }));\n        })\n        .catch(err => {\n          this.errorMessage = 'Error fetching forecast data.';\n          console.error(err);\n        });\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.forecast-container {\n  padding: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":";;;AA2BA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClBF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACT,QAAQ,CAAC;MACzD,MAAMY,MAAK,GAAI,kCAAkC;MACjD,MAAMC,GAAE,GAAI,sDAAsD,IAAI,CAACb,QAAQ,yBAAyBY,MAAM,EAAE;MAChHE,KAAK,CAACD,GAAG,EACNE,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACtBF,IAAI,CAACX,IAAG,IAAK;QACZ,IAAIA,IAAI,CAACc,GAAE,KAAM,KAAK,EAAE;UACtB,IAAI,CAACZ,YAAW,GAAI,gCAAgC;UACpDE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEL,IAAI,CAACe,OAAO,CAAC;UACjD;QACF;QACAX,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,IAAI,CAAC;QAC3C,MAAMgB,SAAQ,GAAIhB,IAAI,CAACiB,IAAI,CAACC,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClF,IAAI,CAACpB,YAAW,GAAIe,SAAS,CAACM,GAAG,CAACC,IAAG,KAAM;UACzCC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAC,CAAC;UAC/EC,OAAO,EAAEN,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;UAC7BC,IAAI,EAAER,IAAI,CAACO,IAAI,CAACE,QAAQ;UACxBC,GAAG,EAAEV,IAAI,CAACO,IAAI,CAACI;QACjB,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACZ,IAAI,CAAClC,YAAW,GAAI,+BAA+B;QACnDE,OAAO,CAACiC,KAAK,CAACD,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}