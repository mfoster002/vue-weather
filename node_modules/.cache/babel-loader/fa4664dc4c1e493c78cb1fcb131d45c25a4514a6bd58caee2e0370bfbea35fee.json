{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: 'HourlyForecast',\n  components: {\n    Bar\n  },\n  props: {\n    hourlyData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Hourly Temperature (째F)',\n          data: [],\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Hourly Temperature Forecast'\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Hour'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Temperature (째F)'\n            },\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  watch: {\n    hourlyData: {\n      immediate: true,\n      handler(newData) {\n        if (newData && newData.length > 0) {\n          this.processHourlyData(newData);\n        }\n      }\n    }\n  },\n  methods: {\n    processHourlyData(data) {\n      // Limit to first 12 hours\n      const limitedData = data.slice(0, 12);\n\n      // Extract hour labels and temperatures\n      this.chartData.labels = limitedData.map(item => {\n        const date = new Date(item.dt * 1000);\n        return `${date.getHours()}:00`;\n      });\n      this.chartData.datasets[0].data = limitedData.map(item => item.temp);\n    }\n  }\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","props","hourlyData","type","Array","default","data","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","display","position","title","text","scales","x","y","beginAtZero","watch","immediate","handler","newData","length","processHourlyData","methods","limitedData","slice","map","item","date","Date","dt","getHours","temp"],"sources":["/Users/marianfoster/vue-weather/src/components/Hourly.vue"],"sourcesContent":["<template>\n  <div class=\"hourly-forecast-container\">\n    <h2>Hourly Forecast</h2>\n    <div v-if=\"hourlyData && hourlyData.length > 0\">\n      <Bar \n        :data=\"chartData\" \n        :options=\"chartOptions\" \n      />\n    </div>\n    <div v-else>\n      <p>No data available for hourly forecast.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  Title, \n  Tooltip, \n  Legend, \n  BarElement, \n  CategoryScale, \n  LinearScale\n);\n\nexport default {\n  name: 'HourlyForecast',\n  components: {\n    Bar,\n  },\n  props: {\n    hourlyData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Hourly Temperature (째F)',\n            data: [],\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          },\n        ],\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Hourly Temperature Forecast',\n          },\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Hour',\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Temperature (째F)',\n            },\n            beginAtZero: true,\n          },\n        },\n      },\n    };\n  },\n  watch: {\n    hourlyData: {\n      immediate: true,\n      handler(newData) {\n        if (newData && newData.length > 0) {\n          this.processHourlyData(newData);\n        }\n      }\n    }\n  },\n  methods: {\n    processHourlyData(data) {\n      // Limit to first 12 hours\n      const limitedData = data.slice(0, 12);\n      \n      // Extract hour labels and temperatures\n      this.chartData.labels = limitedData.map((item) => {\n        const date = new Date(item.dt * 1000);\n        return `${date.getHours()}:00`;\n      });\n      \n      this.chartData.datasets[0].data = limitedData.map((item) => item.temp);\n    },\n  },\n}\n</script>\n\n<style scoped>\n.hourly-forecast-container {\n  padding: 20px;\n  text-align: center;\n}\n\nh2 {\n  margin-bottom: 20px;\n}\n\ncanvas {\n  max-width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":";AAgBA,SAASA,GAAE,QAAS,aAAa;AACjC,SACEC,KAAI,IAAKC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACN,UAAU;;AAEjB;AACAN,OAAO,CAACO,QAAQ,CACdN,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WACF,CAAC;AAED,eAAe;EACbE,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVX;EACF,CAAC;EACDY,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,yBAAyB;UAChCJ,IAAI,EAAE,EAAE;UACRK,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE,IAAI;YACbC,QAAQ,EAAE;UACZ,CAAC;UACDC,KAAK,EAAE;YACLF,OAAO,EAAE,IAAI;YACbG,IAAI,EAAE;UACR;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDH,KAAK,EAAE;cACLF,OAAO,EAAE,IAAI;cACbG,IAAI,EAAE;YACR;UACF,CAAC;UACDG,CAAC,EAAE;YACDJ,KAAK,EAAE;cACLF,OAAO,EAAE,IAAI;cACbG,IAAI,EAAE;YACR,CAAC;YACDI,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLxB,UAAU,EAAE;MACVyB,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,OAAO,EAAE;QACf,IAAIA,OAAM,IAAKA,OAAO,CAACC,MAAK,GAAI,CAAC,EAAE;UACjC,IAAI,CAACC,iBAAiB,CAACF,OAAO,CAAC;QACjC;MACF;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPD,iBAAiBA,CAACzB,IAAI,EAAE;MACtB;MACA,MAAM2B,WAAU,GAAI3B,IAAI,CAAC4B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;MAErC;MACA,IAAI,CAAC3B,SAAS,CAACC,MAAK,GAAIyB,WAAW,CAACE,GAAG,CAAEC,IAAI,IAAK;QAChD,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC;QACrC,OAAO,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAK;MAChC,CAAC,CAAC;MAEF,IAAI,CAACjC,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAI2B,WAAW,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,IAAI,CAAC;IACxE;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}