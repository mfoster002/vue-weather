{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"5-Day Forecast for \" + _toDisplayString($props.location), 1 /* TEXT */), $data.forecastData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.forecastData, (day, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(day.day) + \": High \" + _toDisplayString(day.high) + \"째F, Low \" + _toDisplayString(day.low) + \"째F\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"No forecast data available\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","$props","location","$data","forecastData","length","_hoisted_1","_Fragment","_renderList","day","index","high","low","_hoisted_2"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>5-Day Forecast for {{ location }}</h2>\n    <div v-if=\"forecastData.length > 0\">\n      <div v-for=\"(day, index) in forecastData\" :key=\"index\">\n        <p>{{ day.day }}: High {{ day.high }}째F, Low {{ day.low }}째F</p>\n      </div>\n    </div>\n    <p v-else>No forecast data available</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    location: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      forecastData: []\n    }\n  },\n  created() {\n    // Retrieve forecast data from localStorage\n    const storedForecastData = localStorage.getItem('forecastData');\n    if (storedForecastData) {\n      this.forecastData = JSON.parse(storedForecastData);\n    }\n  }\n}\n</script>\n\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAQM,cAPJC,mBAAA,CAA0C,YAAtC,qBAAmB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,kBACvBC,KAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAA9BP,mBAAA,CAIM,OAPVQ,UAAA,I,kBAIMR,mBAAA,CAEMS,SAAA,QANZC,WAAA,CAIkCL,KAAA,CAAAC,YAAY,EAJ9C,CAImBK,GAAG,EAAEC,KAAK;yBAAvBZ,mBAAA,CAEM;MAFqCD,GAAG,EAAEa;IAAK,IACnDX,mBAAA,CAAgE,WAAAC,gBAAA,CAA1DS,GAAG,CAACA,GAAG,IAAG,SAAO,GAAAT,gBAAA,CAAGS,GAAG,CAACE,IAAI,IAAG,UAAQ,GAAAX,gBAAA,CAAGS,GAAG,CAACG,GAAG,IAAG,IAAE,gB;qDAGhEd,mBAAA,CAAwC,KAR5Ce,UAAA,EAQc,4BAA0B,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}