{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS } from 'chart.js';\nimport { defineComponent, ref, onMounted } from 'vue';\nexport default defineComponent({\n  name: 'HourlyForecast',\n  components: {\n    BarChart: Bar\n  },\n  props: {\n    hourlyData: Array\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [{\n        label: 'Temperature (°F)',\n        data: [],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    });\n    onMounted(() => {\n      updateChartData();\n    });\n    function updateChartData() {\n      const labels = props.hourlyData.slice(0, 12).map(item => {\n        const date = new Date(item.dt * 1000);\n        return `${date.getHours()}:00`;\n      });\n      const temperatures = props.hourlyData.slice(0, 12).map(item => item.temp);\n      chartData.value.labels = labels;\n      chartData.value.datasets[0].data = temperatures;\n    }\n    return {\n      chartData\n    };\n  }\n});","map":{"version":3,"names":["Bar","Chart","ChartJS","defineComponent","ref","onMounted","name","components","BarChart","props","hourlyData","Array","setup","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","updateChartData","slice","map","item","date","Date","dt","getHours","temperatures","temp","value"],"sources":["/Users/marianfoster/vue-weather/src/components/Hourly.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Hourly Forecast</h2>\n    <div v-if=\"hourlyData.length > 0\">\n      <bar-chart :data=\"chartData\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS } from 'chart.js';\nimport { defineComponent, ref, onMounted } from 'vue';\n\nexport default defineComponent({\n  name: 'HourlyForecast',\n  components: {\n    BarChart: Bar,\n  },\n  props: {\n    hourlyData: Array,\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [\n        {\n          label: 'Temperature (°F)',\n          data: [],\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1,\n        },\n      ],\n    });\n\n    onMounted(() => {\n      updateChartData();\n    });\n\n    function updateChartData() {\n      const labels = props.hourlyData.slice(0, 12).map((item) => {\n        const date = new Date(item.dt * 1000);\n        return `${date.getHours()}:00`;\n      });\n\n      const temperatures = props.hourlyData.slice(0, 12).map((item) => item.temp);\n\n      chartData.value.labels = labels;\n      chartData.value.datasets[0].data = temperatures;\n    }\n\n    return { chartData };\n  },\n});\n</script>\n\n<style scoped>\nh2 {\n  text-align: center;\n}\n</style>\n"],"mappings":";AAUA,SAASA,GAAE,QAAS,aAAa;AACjC,SAASC,KAAI,IAAKC,OAAM,QAAS,UAAU;AAC3C,SAASC,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAErD,eAAeF,eAAe,CAAC;EAC7BG,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVC,QAAQ,EAAER;EACZ,CAAC;EACDS,KAAK,EAAE;IACLC,UAAU,EAAEC;EACd,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAMI,SAAQ,GAAIT,GAAG,CAAC;MACpBU,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,kBAAkB;QACzBC,IAAI,EAAE,EAAE;QACRC,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,uBAAuB;QACpCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;IAEFf,SAAS,CAAC,MAAM;MACdgB,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,SAASA,eAAeA,CAAA,EAAG;MACzB,MAAMP,MAAK,GAAIL,KAAK,CAACC,UAAU,CAACY,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAK;QACzD,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC;QACrC,OAAO,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAK;MAChC,CAAC,CAAC;MAEF,MAAMC,YAAW,GAAIpB,KAAK,CAACC,UAAU,CAACY,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACM,IAAI,CAAC;MAE3EjB,SAAS,CAACkB,KAAK,CAACjB,MAAK,GAAIA,MAAM;MAC/BD,SAAS,CAACkB,KAAK,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAG,GAAIY,YAAY;IACjD;IAEA,OAAO;MAAEhB;IAAU,CAAC;EACtB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}