{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n</template>\n<script>\nexport default {\n  name: \"FiveDayForecast\",\n  props: {\n    location: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      forecastData: [],\n      errorMessage: \"\",\n    };\n  },\n  mounted() {\n    if (this.location) {\n      this.fetchForecastData();\n    } else {\n      this.errorMessage = \"Location is missing!\";\n    }\n  },\n  methods: {\n    fetchForecastData() {\n      const apiKey = \"4df475f18aaaf4aba5fb2eb54246d4f8\";\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.location}&units=imperial&appid=${apiKey}`;\n\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== \"200\") {\n            this.errorMessage = \"Unable to fetch forecast data.\";\n            return;\n          }\n          const dailyData = data.list.filter((reading) => reading.dt_txt.includes(\"18:00:00\"));\n          this.forecastData = dailyData.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n            weather: item.weather[0].main,\n            high: item.main.temp_max,\n            low: item.main.temp_min,\n          }));\n        })\n        .catch((err) => {\n          this.errorMessage = \"Error fetching forecast data.\";\n          console.error(err);\n        });\n    },\n  },\n};\n</script>\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}