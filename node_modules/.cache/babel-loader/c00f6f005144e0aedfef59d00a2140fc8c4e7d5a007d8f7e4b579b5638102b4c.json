{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      geoData: {},\n      savedLocations: []\n    };\n  },\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0]?.main?.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist'\n      };\n      return conditionMap[weatherCondition] || 'default';\n    }\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key === 'Enter' && this.query.trim() !== '') {\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          this.weather = data;\n          this.fetchGeoData();\n          this.fetchForecastData(); // Fetch the 5-day forecast data after getting weather\n        }).catch(err => console.error(err));\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return now.toLocaleDateString('en-US', options);\n    },\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`).then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          const {\n            name,\n            state,\n            country\n          } = data[0];\n          console.log(`GeoData: ${name}, ${state}, ${country}`);\n          this.geoData = {\n            name,\n            state,\n            country\n          };\n        }\n      }).catch(err => console.error(err));\n    },\n    fetchForecastData() {\n      if (this.weather.coord) {\n        // Fetch the 5-day forecast data using the coordinates from the current weather\n        fetch(`${this.url_base}forecast?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&cnt=5&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          this.forecastData = data.list.map(item => ({\n            day: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n              weekday: 'long'\n            }),\n            high: item.main.temp_max,\n            low: item.main.temp_min\n          }));\n          console.log('Forecast Data:', this.forecastData);\n        }).catch(err => console.error('Error fetching forecast data:', err));\n      }\n    },\n    navigateTo5Day() {\n      if (this.weather.name && this.forecastData.length > 0) {\n        const location = `${this.weather.name}, ${this.weather.sys.country}`;\n        this.$router.push({\n          name: 'FiveDayForecast',\n          params: {\n            forecastData: this.forecastData,\n            location: location\n          }\n        });\n      } else {\n        console.error('Weather or forecast data is missing');\n      }\n    },\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        console.log('Saved Locations:', this.savedLocations);\n      }\n    },\n    setResults(results) {\n      if (results && results.weather && results.weather[0]) {\n        this.weather = results;\n        const weatherCondition = this.weather.weather[0]?.main?.toLowerCase();\n        const conditionMap = {\n          clear: 'clear',\n          clouds: 'clouds',\n          rain: 'rain',\n          drizzle: 'drizzle',\n          thunderstorm: 'thunderstorm',\n          snow: 'snow',\n          mist: 'mist',\n          haze: 'mist'\n        };\n        const conditionClass = conditionMap[weatherCondition] || 'default';\n        const appElement = document.getElementById('app');\n        if (appElement) {\n          appElement.className = '';\n          appElement.classList.add(conditionClass);\n        } else {\n          console.error('App element not found.');\n        }\n      } else {\n        console.error('Weather data is missing or incomplete:', results);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","api_key","url_base","query","weather","forecastData","geoData","savedLocations","computed","weatherClass","weatherCondition","main","toLowerCase","conditionMap","clear","clouds","rain","drizzle","thunderstorm","snow","mist","haze","methods","fetchWeather","e","key","trim","fetch","then","res","json","fetchGeoData","fetchForecastData","catch","err","console","error","dateBuilder","now","Date","options","weekday","year","month","day","toLocaleDateString","length","state","country","log","coord","lat","lon","list","map","item","dt","high","temp_max","low","temp_min","navigateTo5Day","location","sys","$router","push","params","saveLocation","includes","setResults","results","conditionClass","appElement","document","getElementById","className","classList","add"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"weatherClass\">\n    <main>\n      <div class=\"search-box\">\n        <input \n          type=\"text\" \n          class=\"search-bar\" \n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\" \n        />\n      </div>\n\n      <div class=\"weather-wrap\" v-if=\"weather.main\">\n        <div class=\"location-box\">\n          <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°f</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n\n        <!-- Weather Buttons -->\n        <button @click=\"saveLocation\">Save Location</button>\n        <button @click=\"navigateTo5Day\">Go to 5-Day Forecast</button>\n\n        <5Day :forecastData=\"forecastData\" :location=\"location\" />\n\n        <div v-if=\"savedLocations && savedLocations.length\">         \n          <h3>Saved Locations:</h3>\n          <ul>\n            <li v-for=\"(location, index) in savedLocations\" :key=\"index\">{{ location }}</li>\n          </ul>  \n        </div>\n      </div>  \n    </main>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      geoData: {},\n      savedLocations: [],\n    };\n  },\n\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0]?.main?.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist',\n      };\n\n      return conditionMap[weatherCondition] || 'default';\n    },\n  },\n\n  methods: {\n    fetchWeather(e) {\n      if (e.key === 'Enter' && this.query.trim() !== '') {\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.weather = data;\n            this.fetchGeoData();\n            this.fetchForecastData(); // Fetch the 5-day forecast data after getting weather\n          })\n          .catch((err) => console.error(err));\n      }\n    },\n\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      return now.toLocaleDateString('en-US', options);\n    },\n\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            const { name, state, country } = data[0];\n            console.log(`GeoData: ${name}, ${state}, ${country}`);\n            this.geoData = { name, state, country };\n          }\n        })\n        .catch((err) => console.error(err));\n    },\n\n    fetchForecastData() {\n      if (this.weather.coord) {\n        // Fetch the 5-day forecast data using the coordinates from the current weather\n        fetch(`${this.url_base}forecast?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&cnt=5&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.forecastData = data.list.map(item => ({\n              day: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n              high: item.main.temp_max,\n              low: item.main.temp_min,\n            }));\n            console.log('Forecast Data:', this.forecastData);\n          })\n          .catch((err) => console.error('Error fetching forecast data:', err));\n      }\n    },\n\n    navigateTo5Day() {\n      if (this.weather.name && this.forecastData.length > 0) {\n        const location = `${this.weather.name}, ${this.weather.sys.country}`;\n        this.$router.push({\n          name: 'FiveDayForecast',\n          params: {\n            forecastData: this.forecastData,\n            location: location,\n          },\n        });\n      } else {\n        console.error('Weather or forecast data is missing');\n      }\n    },\n\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        console.log('Saved Locations:', this.savedLocations);\n      }\n    },\n\n    setResults(results) {\n      if (results && results.weather && results.weather[0]) {\n        this.weather = results;\n        const weatherCondition = this.weather.weather[0]?.main?.toLowerCase();\n        const conditionMap = {\n          clear: 'clear',\n          clouds: 'clouds',\n          rain: 'rain',\n          drizzle: 'drizzle',\n          thunderstorm: 'thunderstorm',\n          snow: 'snow',\n          mist: 'mist',\n          haze: 'mist',\n        };\n\n        const conditionClass = conditionMap[weatherCondition] || 'default';\n        const appElement = document.getElementById('app');\n        if (appElement) {\n          appElement.className = '';\n          appElement.classList.add(conditionClass);\n        } else {\n          console.error('App element not found.');\n        }\n      } else {\n        console.error('Weather data is missing or incomplete:', results);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n#app {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.default {\n  background-image: url('./assets/default.jpg');\n}\n\n#app.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n#app.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n#app.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n#app.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n#app.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n#app.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n#app.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}