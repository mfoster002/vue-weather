{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { Chart } from 'chart.js';\nexport default defineComponent({\n  name: 'FiveDayForecast',\n  setup() {\n    const route = useRoute(); // Access the query params from Vue Router\n    const location = ref(route.query.location || ''); // Default to empty string if no location is provided\n    const forecastData = ref([]); // Initialize forecast data\n    const errorMessage = ref(''); // Initialize error message\n\n    // Debugging: Log the location to confirm it's being passed correctly\n    console.log('Location for forecast:', location.value);\n    onMounted(() => {\n      // Check if location is available\n      if (location.value) {\n        fetchForecastData();\n      } else {\n        errorMessage.value = 'No location provided.';\n      }\n    });\n    const fetchForecastData = () => {\n      if (!location.value) {\n        errorMessage.value = 'No location provided.';\n        return;\n      }\n\n      // Make sure the API is called with the correct location\n      const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=6c07b7050c30876a4e88cfbb4dee8dc3`;\n      console.log('Fetching data from:', apiUrl); // Debugging the API URL\n\n      fetch(apiUrl).then(res => res.json()).then(data => {\n        if (data.cod !== '200') {\n          errorMessage.value = 'Unable to fetch forecast data.';\n          return;\n        }\n        forecastData.value = data.list.map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString(),\n          temp: item.main.temp\n        }));\n        createChart();\n      }).catch(err => {\n        errorMessage.value = 'Error fetching forecast data.';\n        console.error(err);\n      });\n    };\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map(item => item.date),\n          datasets: [{\n            label: 'Temperature (°F)',\n            data: forecastData.value.map(item => item.temp),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n    return {\n      location,\n      forecastData,\n      errorMessage\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","onMounted","useRoute","Chart","name","setup","route","location","query","forecastData","errorMessage","console","log","value","fetchForecastData","apiUrl","fetch","then","res","json","data","cod","list","map","item","date","Date","dt","toLocaleDateString","temp","main","createChart","catch","err","error","ctx","document","getElementById","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n  <div class=\"five-day-forecast\">\n    <h2>{{ location }} - 5-Day Forecast</h2>\n\n    <!-- Chart.js Bar Chart -->\n    <canvas id=\"forecast-chart\" width=\"400\" height=\"200\"></canvas>\n\n    <!-- Display any error message if needed -->\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n    <button @click=\"$router.push('/')\">Go Back</button>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { Chart } from 'chart.js';\n\nexport default defineComponent({\n  name: 'FiveDayForecast',\n  setup() {\n    const route = useRoute(); // Access the query params from Vue Router\n    const location = ref(route.query.location || ''); // Default to empty string if no location is provided\n    const forecastData = ref([]); // Initialize forecast data\n    const errorMessage = ref(''); // Initialize error message\n\n    // Debugging: Log the location to confirm it's being passed correctly\n    console.log('Location for forecast:', location.value);\n\n    onMounted(() => {\n      // Check if location is available\n      if (location.value) {\n        fetchForecastData();\n      } else {\n        errorMessage.value = 'No location provided.';\n      }\n    });\n\n    const fetchForecastData = () => {\n      if (!location.value) {\n        errorMessage.value = 'No location provided.';\n        return;\n      }\n\n      // Make sure the API is called with the correct location\n      const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=6c07b7050c30876a4e88cfbb4dee8dc3`;\n      console.log('Fetching data from:', apiUrl);  // Debugging the API URL\n\n      fetch(apiUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== '200') {\n            errorMessage.value = 'Unable to fetch forecast data.';\n            return;\n          }\n          forecastData.value = data.list.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString(),\n            temp: item.main.temp,\n          }));\n          createChart();\n        })\n        .catch((err) => {\n          errorMessage.value = 'Error fetching forecast data.';\n          console.error(err);\n        });\n    };\n\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map((item) => item.date),\n          datasets: [\n            {\n              label: 'Temperature (°F)',\n              data: forecastData.value.map((item) => item.temp),\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    return {\n      location,\n      forecastData,\n      errorMessage,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.five-day-forecast {\n  padding: 20px;\n  text-align: center;\n}\n\n.error-message {\n  color: red;\n  margin-top: 20px;\n}\n</style>\n\n\n"],"mappings":";AAcA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACrD,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,KAAI,QAAS,UAAU;AAEhC,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC,EAAE;IAC1B,MAAMK,QAAO,GAAIP,GAAG,CAACM,KAAK,CAACE,KAAK,CAACD,QAAO,IAAK,EAAE,CAAC,EAAE;IAClD,MAAME,YAAW,GAAIT,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,MAAMU,YAAW,GAAIV,GAAG,CAAC,EAAE,CAAC,EAAE;;IAE9B;IACAW,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,QAAQ,CAACM,KAAK,CAAC;IAErDZ,SAAS,CAAC,MAAM;MACd;MACA,IAAIM,QAAQ,CAACM,KAAK,EAAE;QAClBC,iBAAiB,CAAC,CAAC;MACrB,OAAO;QACLJ,YAAY,CAACG,KAAI,GAAI,uBAAuB;MAC9C;IACF,CAAC,CAAC;IAEF,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,IAAI,CAACP,QAAQ,CAACM,KAAK,EAAE;QACnBH,YAAY,CAACG,KAAI,GAAI,uBAAuB;QAC5C;MACF;;MAEA;MACA,MAAME,MAAK,GAAI,sDAAsDR,QAAQ,CAACM,KAAK,8DAA8D;MACjJF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,MAAM,CAAC,EAAG;;MAE7CC,KAAK,CAACD,MAAM,EACTE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,GAAE,KAAM,KAAK,EAAE;UACtBX,YAAY,CAACG,KAAI,GAAI,gCAAgC;UACrD;QACF;QACAJ,YAAY,CAACI,KAAI,GAAIO,IAAI,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;UAC5CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;UACnDC,IAAI,EAAEL,IAAI,CAACM,IAAI,CAACD;QAClB,CAAC,CAAC,CAAC;QACHE,WAAW,CAAC,CAAC;MACf,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdvB,YAAY,CAACG,KAAI,GAAI,+BAA+B;QACpDF,OAAO,CAACuB,KAAK,CAACD,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAED,MAAMF,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMI,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACtE,IAAInC,KAAK,CAACgC,GAAG,EAAE;QACbI,IAAI,EAAE,KAAK;QACXnB,IAAI,EAAE;UACJoB,MAAM,EAAE/B,YAAY,CAACI,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;UACnDgB,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,kBAAkB;YACzBtB,IAAI,EAAEX,YAAY,CAACI,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,IAAI,CAAC;YACjDc,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACL3C,QAAQ;MACRE,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}