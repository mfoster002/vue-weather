{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: 'HourlyForecast',\n  components: {\n    Bar\n  },\n  props: {\n    location: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      hourlyData: [],\n      chartData: {\n        labels: [],\n        datasets: []\n      },\n      chartOptions: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  watch: {\n    location: {\n      immediate: true,\n      handler() {\n        this.fetchHourlyData();\n      }\n    }\n  },\n  methods: {\n    fetchHourlyData() {\n      const apiKey = 'YOUR_API_KEY';\n      // Replace the lat and lon with dynamic values if needed\n      const lat = 51.5085;\n      const lon = -0.1257;\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=current,minutely,daily,alerts&appid=${apiKey}`;\n      fetch(url).then(res => res.json()).then(data => {\n        this.hourlyData = data.hourly;\n        this.updateChartData();\n      }).catch(err => console.error('Error fetching hourly data:', err));\n    },\n    updateChartData() {\n      this.chartData.labels = this.hourlyData.map(data => new Date(data.dt * 1000).toLocaleTimeString());\n      this.chartData.datasets = [{\n        label: 'Temperature (°F)',\n        data: this.hourlyData.map(data => data.temp),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)'\n      }, {\n        label: 'Rain (mm)',\n        data: this.hourlyData.map(data => data.rain ? data.rain['1h'] : 0),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)'\n      }];\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","props","location","type","String","required","data","hourlyData","chartData","labels","datasets","chartOptions","responsive","scales","y","beginAtZero","watch","immediate","handler","fetchHourlyData","methods","apiKey","lat","lon","url","fetch","then","res","json","hourly","updateChartData","catch","err","console","error","map","Date","dt","toLocaleTimeString","label","temp","backgroundColor","rain","goBack","$router","go"],"sources":["/Users/marianfoster/vue-weather/src/views/HourlyForecast.vue"],"sourcesContent":["<template>\n  <div class=\"hourly-forecast-container\">\n    <h2>Hourly Forecast for {{ location }}</h2>\n    <Bar :data=\"chartData\" :options=\"chartOptions\" v-if=\"hourlyData.length\" />\n    <p v-else>No hourly data available.</p>\n    <button @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  name: 'HourlyForecast',\n  components: { Bar },\n  props: { location: { type: String, required: true } },\n  data() {\n    return {\n      hourlyData: [],\n      chartData: { labels: [], datasets: [] },\n      chartOptions: { responsive: true, scales: { y: { beginAtZero: true } } },\n    };\n  },\n  watch: {\n    location: {\n      immediate: true,\n      handler() {\n        this.fetchHourlyData();\n      },\n    },\n  },\n  methods: {\n    fetchHourlyData() {\n      const apiKey = 'YOUR_API_KEY';\n      // Replace the lat and lon with dynamic values if needed\n      const lat = 51.5085;\n      const lon = -0.1257;\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=current,minutely,daily,alerts&appid=${apiKey}`;\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          this.hourlyData = data.hourly;\n          this.updateChartData();\n        })\n        .catch((err) => console.error('Error fetching hourly data:', err));\n    },\n    updateChartData() {\n      this.chartData.labels = this.hourlyData.map((data) => new Date(data.dt * 1000).toLocaleTimeString());\n      this.chartData.datasets = [\n        {\n          label: 'Temperature (°F)',\n          data: this.hourlyData.map((data) => data.temp),\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        },\n        {\n          label: 'Rain (mm)',\n          data: this.hourlyData.map((data) => (data.rain ? data.rain['1h'] : 0)),\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        },\n      ];\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.hourly-forecast-container {\n  padding: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":";AAUA,SAASA,GAAE,QAAS,aAAa;AACjC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAU,QAAS,UAAU;AAE3GN,OAAO,CAACO,QAAQ,CAACN,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEhF,eAAe;EACbE,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAAEX;EAAI,CAAC;EACnBY,KAAK,EAAE;IAAEC,QAAQ,EAAE;MAAEC,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAK;EAAE,CAAC;EACrDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACvCC,YAAY,EAAE;QAAEC,UAAU,EAAE,IAAI;QAAEC,MAAM,EAAE;UAAEC,CAAC,EAAE;YAAEC,WAAW,EAAE;UAAK;QAAE;MAAE;IACzE,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLd,QAAQ,EAAE;MACRe,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,MAAK,GAAI,cAAc;MAC7B;MACA,MAAMC,GAAE,GAAI,OAAO;MACnB,MAAMC,GAAE,GAAI,CAAC,MAAM;MACnB,MAAMC,GAAE,GAAI,uDAAuDF,GAAG,QAAQC,GAAG,+DAA+DF,MAAM,EAAE;MACxJI,KAAK,CAACD,GAAG,EACNE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEpB,IAAI,IAAK;QACd,IAAI,CAACC,UAAS,GAAID,IAAI,CAACuB,MAAM;QAC7B,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;IACtE,CAAC;IACDF,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACtB,SAAS,CAACC,MAAK,GAAI,IAAI,CAACF,UAAU,CAAC4B,GAAG,CAAE7B,IAAI,IAAK,IAAI8B,IAAI,CAAC9B,IAAI,CAAC+B,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;MACpG,IAAI,CAAC9B,SAAS,CAACE,QAAO,GAAI,CACxB;QACE6B,KAAK,EAAE,kBAAkB;QACzBjC,IAAI,EAAE,IAAI,CAACC,UAAU,CAAC4B,GAAG,CAAE7B,IAAI,IAAKA,IAAI,CAACkC,IAAI,CAAC;QAC9CC,eAAe,EAAE;MACnB,CAAC,EACD;QACEF,KAAK,EAAE,WAAW;QAClBjC,IAAI,EAAE,IAAI,CAACC,UAAU,CAAC4B,GAAG,CAAE7B,IAAI,IAAMA,IAAI,CAACoC,IAAG,GAAIpC,IAAI,CAACoC,IAAI,CAAC,IAAI,IAAI,CAAE,CAAC;QACtED,eAAe,EAAE;MACnB,CAAC,CACF;IACH,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}