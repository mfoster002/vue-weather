{"ast":null,"code":"import { vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"search-box\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"weather-wrap\"\n};\nconst _hoisted_5 = {\n  class: \"location-box\"\n};\nconst _hoisted_6 = {\n  class: \"location\"\n};\nconst _hoisted_7 = {\n  class: \"date\"\n};\nconst _hoisted_8 = {\n  class: \"weather-box\"\n};\nconst _hoisted_9 = {\n  class: \"temp\"\n};\nconst _hoisted_10 = {\n  class: \"weather\"\n};\nconst _hoisted_11 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass(['main-container', $options.weatherClass])\n  }, [_createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-bar\",\n    placeholder: \"Search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    onKeypress: _cache[1] || (_cache[1] = _withKeys((...args) => $options.fetchWeather && $options.fetchWeather(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.query]])]), _createCommentVNode(\" Error Message \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.$route.name === 'Home' && $data.weather.main && !$data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString($data.weather.name) + \", \" + _toDisplayString($data.weather.sys.country), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, _toDisplayString($options.dateBuilder()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(Math.round($data.weather.main.temp)) + \"°f\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.weather.weather[0].main), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveLocation && $options.saveLocation(...args))\n  }, \"Save Location\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.navigateTo5Day && $options.navigateTo5Day(...args))\n  }, \"Show 5-day Forecast\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.navigateToSavedLocations && $options.navigateToSavedLocations(...args))\n  }, \"Saved Locations\")]), Array.isArray($data.hourlyData) && $data.hourlyData.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.showHourlyForecast && $options.showHourlyForecast(...args))\n  }, \"Show Hourly Forecast\")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_view)])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$options","weatherClass","_hoisted_2","type","placeholder","_cache","$event","$data","query","onKeypress","_withKeys","args","fetchWeather","_createCommentVNode","errorMessage","_hoisted_3","_toDisplayString","_ctx","$route","name","weather","main","_hoisted_4","_hoisted_5","_hoisted_6","sys","country","_hoisted_7","dateBuilder","_hoisted_8","_hoisted_9","Math","round","temp","_hoisted_10","_hoisted_11","onClick","saveLocation","navigateTo5Day","navigateToSavedLocations","Array","isArray","hourlyData","length","_hoisted_12","showHourlyForecast","_createVNode","_component_router_view"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div :class=\"['main-container', weatherClass]\">\n      <main>\n        <div class=\"search-box\">\n          <input \n            type=\"text\" \n            class=\"search-bar\" \n            placeholder=\"Search...\"\n            v-model=\"query\"\n            @keypress.enter=\"fetchWeather\" \n          />\n        </div>\n\n        <!-- Error Message -->\n        <div v-if=\"errorMessage\" class=\"error-message\">\n          {{ errorMessage }}\n        </div>\n\n        <div v-if=\"$route.name === 'Home' && weather.main && !errorMessage\" class=\"weather-wrap\">\n          <div class=\"location-box\">\n            <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n            <div class=\"date\">{{ dateBuilder() }}</div>\n          </div>\n       \n          <div class=\"weather-box\">\n            <div class=\"temp\">{{ Math.round(weather.main.temp) }}°f</div>\n            <div class=\"weather\">{{ weather.weather[0].main }}</div>\n          </div>\n\n          <div class=\"action-buttons\">\n            <button @click=\"saveLocation\">Save Location</button>\n            <button @click=\"navigateTo5Day\">Show 5-day Forecast</button>\n            <button @click=\"navigateToSavedLocations\">Saved Locations</button>\n          </div>\n\n          <div v-if=\"Array.isArray(hourlyData) && hourlyData.length\">\n            <button @click=\"showHourlyForecast\">Show Hourly Forecast</button>\n          </div>\n        </div>  \n\n        <router-view></router-view> \n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      query: '',\n      weather: {},\n      hourlyData: [],\n      errorMessage: '',\n      savedLocations: []\n    }\n  },\n  computed: {\n    weatherClass() {\n      if (!this.weather.weather) return 'default';\n      \n      const weatherMain = this.weather.weather[0].main.toLowerCase();\n      const classMap = {\n        'clouds': 'clouds',\n        'clear': 'clear',\n        'mist': 'mist',\n        'snow': 'snow',\n        'rain': 'rain',\n        'drizzle': 'drizzle',\n        'thunderstorm': 'thunderstorm'\n      };\n      \n      return classMap[weatherMain] || 'default';\n    }\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key === 'Enter') {\n        const apiKey = '6c07b7050c30876a4e88cfbb4dee8dc3';\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${this.query}&units=imperial&appid=${apiKey}`;\n        \n        // Reset previous state\n        this.errorMessage = '';\n        this.weather = {};\n        this.hourlyData = [];\n        \n        fetch(apiUrl)\n          .then(response => response.json())\n          .then(data => {\n            if (data.cod && data.cod !== 200) {\n              this.errorMessage = data.message || 'City not found';\n              return;\n            }\n            \n            this.weather = data;\n            \n            const hourlyUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${this.query}&units=imperial&appid=${apiKey}`;\n            \n            return fetch(hourlyUrl);\n          })\n          .then(response => response.json())\n          .then(hourlyData => {\n            if (hourlyData && hourlyData.list) {\n              this.hourlyData = hourlyData.list;\n            }\n          })\n          .catch(err => {\n            console.error('Error fetching weather data:', err);\n            this.errorMessage = 'Error fetching weather data';\n          });\n      }\n    },\n    dateBuilder() {\n      const d = new Date();\n      const months = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n      const days = [\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n      ];\n\n      const day = days[d.getDay()];\n      const date = d.getDate();\n      const month = months[d.getMonth()];\n      const year = d.getFullYear();\n\n      return `${day} ${date} ${month} ${year}`;\n    },\n    saveLocation() {\n      if (this.weather.name) {\n        const locationToSave = {\n          name: this.weather.name,\n          country: this.weather.sys.country,\n          temp: Math.round(this.weather.main.temp),\n          weather: this.weather.weather[0].main\n        };\n\n        // Check if location already exists\n        const exists = this.savedLocations.some(\n          loc => loc.name === locationToSave.name && \n                 loc.country === locationToSave.country\n        );\n\n        if (!exists) {\n          this.savedLocations.push(locationToSave);\n          // Optional: Persist to localStorage\n          localStorage.setItem('savedLocations', JSON.stringify(this.savedLocations));\n          alert(`${locationToSave.name}, ${locationToSave.country} saved!`);\n        } else {\n          alert('This location is already saved!');\n        }\n      }\n    },\n    navigateTo5Day() {\n      // Assuming you're using vue-router\n      this.$router.push({ \n        name: 'FiveDayForecast', \n        params: { \n          city: this.weather.name,\n          country: this.weather.sys.country \n        }\n      });\n    },\n    navigateToSavedLocations() {\n      // Retrieve saved locations from localStorage if not already loaded\n      const savedFromStorage = localStorage.getItem('savedLocations');\n      if (savedFromStorage) {\n        this.savedLocations = JSON.parse(savedFromStorage);\n      }\n\n      // Assuming you're using vue-router\n      this.$router.push({ \n        name: 'SavedLocations', \n        params: { savedLocations: this.savedLocations }\n      });\n    },\n    showHourlyForecast() {\n      // Assuming you're using vue-router\n      this.$router.push({ \n        name: 'HourlyForecast', \n        params: { \n          hourlyData: this.hourlyData,\n          city: this.weather.name \n        }\n      });\n    }\n  },\n  created() {\n    // Load saved locations on component creation\n    const savedFromStorage = localStorage.getItem('savedLocations');\n    if (savedFromStorage) {\n      this.savedLocations = JSON.parse(savedFromStorage);\n    }\n  }\n}\n</script>\n\n<style>\n/* Previous CSS remains the same, with one addition: */\n.error-message {\n  color: #ff0000;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 10px;\n  text-align: center;\n  margin-bottom: 20px;\n  border-radius: 8px;\n}\n</style>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n.main-container {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n.main-container.default {\n  background-image: url('./assets/default.jpg');\n}\n\n.main-container.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n.main-container.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n.main-container.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n.main-container.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n.main-container.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n.main-container.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n.main-container.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}