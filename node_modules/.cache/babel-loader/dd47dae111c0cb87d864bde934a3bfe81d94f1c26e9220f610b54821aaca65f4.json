{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      api_key: \"4df475f18aaaf4aba5fb2eb54246d4f8\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {},\n      geoData: {},\n      savedLocations: [],\n      errorMessage: \"\"\n    };\n  },\n  computed: {\n    weatherClass() {\n      if (!this.weather.weather) return \"default\";\n      const weatherCondition = this.weather.weather[0].main.toLowerCase();\n      const conditionMap = {\n        clear: \"clear\",\n        clouds: \"clouds\",\n        rain: \"rain\",\n        drizzle: \"drizzle\",\n        thunderstorm: \"thunderstorm\",\n        snow: \"snow\",\n        mist: \"mist\"\n      };\n      return conditionMap[weatherCondition] || \"default\";\n    }\n  },\n  methods: {\n    fetchWeather() {\n      if (this.query.trim() !== \"\") {\n        this.errorMessage = \"\";\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&appid=${this.api_key}`).then(res => res.json()).then(data => {\n          if (data.cod !== 200) {\n            this.errorMessage = \"Location not found. Please try again.\";\n            return;\n          }\n          this.weather = data;\n          this.fetchGeoData();\n        }).catch(err => {\n          this.errorMessage = \"Error fetching weather data. Please try again.\";\n          console.error(err);\n        });\n      }\n    },\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.weather.name}&limit=1&appid=${this.api_key}`).then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          const {\n            name,\n            state,\n            country\n          } = data[0];\n          this.geoData = {\n            name,\n            state,\n            country\n          };\n        }\n      }).catch(err => {\n        console.error(\"Error fetching geo data:\", err);\n        this.errorMessage = \"Error fetching geo data.\";\n      });\n    },\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        localStorage.setItem(\"savedLocations\", JSON.stringify(this.savedLocations));\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return now.toLocaleDateString(\"en-US\", options);\n    },\n    goToSavedLocations() {\n      this.$router.push({\n        name: \"MySavedLocations\",\n        query: {\n          city: this.weather.name\n        }\n      });\n    },\n    goToHourlyForecast() {\n      this.$router.push({\n        name: \"HourlyForecast\",\n        query: {\n          city: this.weather.name\n        }\n      });\n    },\n    goTo5DayForecast() {\n      this.$router.push({\n        name: \"FiveDayForecast\",\n        query: {\n          city: this.weather.name\n        }\n      });\n    }\n  },\n  mounted() {\n    const saved = localStorage.getItem(\"savedLocations\");\n    this.savedLocations = saved ? JSON.parse(saved) : [];\n  }\n};","map":{"version":3,"names":["name","data","api_key","url_base","query","weather","geoData","savedLocations","errorMessage","computed","weatherClass","weatherCondition","main","toLowerCase","conditionMap","clear","clouds","rain","drizzle","thunderstorm","snow","mist","methods","fetchWeather","trim","fetch","then","res","json","cod","fetchGeoData","catch","err","console","error","length","state","country","saveLocation","includes","push","localStorage","setItem","JSON","stringify","dateBuilder","now","Date","options","weekday","year","month","day","toLocaleDateString","goToSavedLocations","$router","city","goToHourlyForecast","goTo5DayForecast","mounted","saved","getItem","parse"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"weatherClass\" id=\"app\">\n    <main>\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-bar\"\n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress.enter=\"fetchWeather\"\n        />\n      </div>\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n      <div v-if=\"weather.main && !errorMessage\" class=\"weather-wrap\">\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }}, {{ geoData.state }}, {{ weather.sys.country }}\n          </div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°F</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n        <!-- Navigation Buttons -->\n        <button @click=\"goToSavedLocations\">View Saved Locations</button>\n        <button @click=\"goToHourlyForecast\">View Hourly Forecast</button>\n        <button @click=\"goTo5DayForecast\">View 5-Day Forecast</button>\n      </div>\n    </main>\n  </div>\n</template>  \n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      api_key: \"4df475f18aaaf4aba5fb2eb54246d4f8\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {},\n      geoData: {},\n      savedLocations: [],\n      errorMessage: \"\",\n    };\n  },\n  computed: {\n    weatherClass() {\n      if (!this.weather.weather) return \"default\";\n      const weatherCondition = this.weather.weather[0].main.toLowerCase();\n      const conditionMap = {\n        clear: \"clear\",\n        clouds: \"clouds\",\n        rain: \"rain\",\n        drizzle: \"drizzle\",\n        thunderstorm: \"thunderstorm\",\n        snow: \"snow\",\n        mist: \"mist\",\n      };\n      return conditionMap[weatherCondition] || \"default\";\n    },\n  },\n  methods: {\n    fetchWeather() {\n      if (this.query.trim() !== \"\") {\n        this.errorMessage = \"\";\n        fetch(\n          `${this.url_base}weather?q=${this.query}&units=imperial&appid=${this.api_key}`\n        )\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.cod !== 200) {\n              this.errorMessage = \"Location not found. Please try again.\";\n              return;\n            }\n            this.weather = data;\n            this.fetchGeoData();\n          })\n          .catch((err) => {\n            this.errorMessage = \"Error fetching weather data. Please try again.\";\n            console.error(err);\n          });\n      }\n    },\n    fetchGeoData() {\n      fetch(\n        `https://api.openweathermap.org/geo/1.0/direct?q=${this.weather.name}&limit=1&appid=${this.api_key}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            const { name, state, country } = data[0];\n            this.geoData = { name, state, country };\n          }\n        })\n        .catch((err) => {\n          console.error(\"Error fetching geo data:\", err);\n          this.errorMessage = \"Error fetching geo data.\";\n        });\n    },\n    saveLocation() {\n      if (\n        this.weather.name &&\n        !this.savedLocations.includes(this.weather.name)\n      ) {\n        this.savedLocations.push(this.weather.name);\n        localStorage.setItem(\n          \"savedLocations\",\n          JSON.stringify(this.savedLocations)\n        );\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\" };\n      return now.toLocaleDateString(\"en-US\", options);\n    },\n    goToSavedLocations() {\n      this.$router.push({ name: \"MySavedLocations\", query: { city: this.weather.name } });\n    },\n    goToHourlyForecast() {\n      this.$router.push({ name: \"HourlyForecast\", query: { city: this.weather.name } });\n    },\n    goTo5DayForecast() {\n      this.$router.push({ name: \"FiveDayForecast\", query: { city: this.weather.name } });\n    },\n  },\n  mounted() {\n    const saved = localStorage.getItem(\"savedLocations\");\n    this.savedLocations = saved ? JSON.parse(saved) : [];\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n#app {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.default {\n  background-image: url('./assets/default.jpg');\n}\n\n#app.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n#app.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n#app.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n#app.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n#app.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n#app.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n#app.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":";AAkCA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,kCAAkC;MAC3CC,QAAQ,EAAE,0CAA0C;MACpDC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE,CAAC,CAAC;MACXC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACL,OAAO,CAACA,OAAO,EAAE,OAAO,SAAS;MAC3C,MAAMM,gBAAe,GAAI,IAAI,CAACN,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACO,IAAI,CAACC,WAAW,CAAC,CAAC;MACnE,MAAMC,YAAW,GAAI;QACnBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE,SAAS;QAClBC,YAAY,EAAE,cAAc;QAC5BC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;MACR,CAAC;MACD,OAAOP,YAAY,CAACH,gBAAgB,KAAK,SAAS;IACpD;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAAC,MAAM,EAAE,EAAE;QAC5B,IAAI,CAAChB,YAAW,GAAI,EAAE;QACtBiB,KAAK,CACH,GAAG,IAAI,CAACtB,QAAQ,aAAa,IAAI,CAACC,KAAK,yBAAyB,IAAI,CAACF,OAAO,EAC9E,EACGwB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEzB,IAAI,IAAK;UACd,IAAIA,IAAI,CAAC4B,GAAE,KAAM,GAAG,EAAE;YACpB,IAAI,CAACrB,YAAW,GAAI,uCAAuC;YAC3D;UACF;UACA,IAAI,CAACH,OAAM,GAAIJ,IAAI;UACnB,IAAI,CAAC6B,YAAY,CAAC,CAAC;QACrB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;UACd,IAAI,CAACxB,YAAW,GAAI,gDAAgD;UACpEyB,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QACpB,CAAC,CAAC;MACN;IACF,CAAC;IACDF,YAAYA,CAAA,EAAG;MACbL,KAAK,CACH,mDAAmD,IAAI,CAACpB,OAAO,CAACL,IAAI,kBAAkB,IAAI,CAACE,OAAO,EACpG,EACGwB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEzB,IAAI,IAAK;QACd,IAAIA,IAAI,CAACkC,MAAK,GAAI,CAAC,EAAE;UACnB,MAAM;YAAEnC,IAAI;YAAEoC,KAAK;YAAEC;UAAQ,IAAIpC,IAAI,CAAC,CAAC,CAAC;UACxC,IAAI,CAACK,OAAM,GAAI;YAAEN,IAAI;YAAEoC,KAAK;YAAEC;UAAQ,CAAC;QACzC;MACF,CAAC,EACAN,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;QAC9C,IAAI,CAACxB,YAAW,GAAI,0BAA0B;MAChD,CAAC,CAAC;IACN,CAAC;IACD8B,YAAYA,CAAA,EAAG;MACb,IACE,IAAI,CAACjC,OAAO,CAACL,IAAG,IAChB,CAAC,IAAI,CAACO,cAAc,CAACgC,QAAQ,CAAC,IAAI,CAAClC,OAAO,CAACL,IAAI,GAC/C;QACA,IAAI,CAACO,cAAc,CAACiC,IAAI,CAAC,IAAI,CAACnC,OAAO,CAACL,IAAI,CAAC;QAC3CyC,YAAY,CAACC,OAAO,CAClB,gBAAgB,EAChBC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACrC,cAAc,CACpC,CAAC;MACH;IACF,CAAC;IACDsC,WAAWA,CAAA,EAAG;MACZ,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,OAAM,GAAI;QAAEC,OAAO,EAAE,MAAM;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MACnF,OAAON,GAAG,CAACO,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;IACjD,CAAC;IACDM,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,OAAO,CAACf,IAAI,CAAC;QAAExC,IAAI,EAAE,kBAAkB;QAAEI,KAAK,EAAE;UAAEoD,IAAI,EAAE,IAAI,CAACnD,OAAO,CAACL;QAAK;MAAE,CAAC,CAAC;IACrF,CAAC;IACDyD,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACF,OAAO,CAACf,IAAI,CAAC;QAAExC,IAAI,EAAE,gBAAgB;QAAEI,KAAK,EAAE;UAAEoD,IAAI,EAAE,IAAI,CAACnD,OAAO,CAACL;QAAK;MAAE,CAAC,CAAC;IACnF,CAAC;IACD0D,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACH,OAAO,CAACf,IAAI,CAAC;QAAExC,IAAI,EAAE,iBAAiB;QAAEI,KAAK,EAAE;UAAEoD,IAAI,EAAE,IAAI,CAACnD,OAAO,CAACL;QAAK;MAAE,CAAC,CAAC;IACpF;EACF,CAAC;EACD2D,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAInB,YAAY,CAACoB,OAAO,CAAC,gBAAgB,CAAC;IACpD,IAAI,CAACtD,cAAa,GAAIqD,KAAI,GAAIjB,IAAI,CAACmB,KAAK,CAACF,KAAK,IAAI,EAAE;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}