{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      hourlyData: [],\n      savedLocations: [],\n      errorMessage: ''\n    };\n  },\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0].main.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist'\n      };\n      return conditionMap[weatherCondition] || 'default';\n    }\n  },\n  methods: {\n    async fetchWeather(e) {\n      if (e.key === 'Enter' && this.query.trim() !== '') {\n        this.errorMessage = '';\n        try {\n          const res = await fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`);\n          const data = await res.json();\n          if (data.cod !== 200) {\n            this.errorMessage = 'Location not found. Please try again.';\n            return;\n          }\n          this.weather = data;\n          await this.fetchAdditionalData();\n        } catch (err) {\n          this.errorMessage = 'Error fetching weather data. Please try again later.';\n          console.error(err);\n        }\n      }\n    },\n    async fetchAdditionalData() {\n      try {\n        const {\n          lat,\n          lon\n        } = this.weather.coord;\n        const res = await fetch(`${this.url_base}onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=minutely,alerts&appid=${this.api_key}`);\n        const data = await res.json();\n        this.updateForecastData(data);\n        this.updateHourlyData(data);\n      } catch (err) {\n        this.errorMessage = 'Error fetching additional weather data.';\n        console.error(err);\n      }\n    },\n    updateForecastData(data) {\n      this.forecastData = data.daily.slice(0, 5).map(item => ({\n        day: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n          weekday: 'long'\n        }),\n        weather: item.weather[0].main,\n        high: item.temp.max,\n        low: item.temp.min\n      }));\n    },\n    updateHourlyData(data) {\n      this.hourlyData = data.hourly.slice(0, 24).map(item => ({\n        time: new Date(item.dt * 1000).toLocaleTimeString(),\n        temp: item.temp,\n        rain: item.rain ? item.rain['1h'] : 0\n      }));\n    }\n  },\n  saveLocation() {\n    if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n      this.savedLocations.push(this.weather.name);\n      this.$router.push({\n        name: 'SavedLocations'\n      });\n    }\n  },\n  dateBuilder() {\n    const now = new Date();\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return now.toLocaleDateString('en-US', options);\n  }\n};","map":{"version":3,"names":["name","data","api_key","url_base","query","weather","forecastData","hourlyData","savedLocations","errorMessage","computed","weatherClass","weatherCondition","main","toLowerCase","conditionMap","clear","clouds","rain","drizzle","thunderstorm","snow","mist","haze","methods","fetchWeather","e","key","trim","res","fetch","json","cod","fetchAdditionalData","err","console","error","lat","lon","coord","updateForecastData","updateHourlyData","daily","slice","map","item","day","Date","dt","toLocaleDateString","weekday","high","temp","max","low","min","hourly","time","toLocaleTimeString","saveLocation","includes","push","$router","dateBuilder","now","options","year","month"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"weatherClass\">\n    <main>\n      <div class=\"search-box\">\n        <input \n          type=\"text\" \n          class=\"search-bar\" \n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\" \n        />\n      </div>\n\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n      <div class=\"weather-wrap\" v-if=\"weather.main && !errorMessage\">\n        <div class=\"location-box\">\n          <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°F</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n\n        <button @click=\"saveLocation\">Save Location</button>\n        <router-link :to=\"{ name: 'FiveDayForecast', params: { location: weather.name } }\">\n          <button>Go to 5-Day Forecast</button>\n        </router-link>\n        <router-link :to=\"{ name: 'HourlyForecast', params: { location: weather.name } }\">\n          <button>Go to Hourly Forecast</button>\n        </router-link>\n      </div>\n\n      <div v-if=\"savedLocations.length\">\n        <h3>Saved Locations:</h3>\n        <ul>\n          <li v-for=\"(location, index) in savedLocations\" :key=\"index\">\n            {{ location }}\n          </li>\n        </ul>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      hourlyData: [],\n      savedLocations: [],\n      errorMessage: '',\n    };\n  },\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0].main.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist',\n      };\n\n      return conditionMap[weatherCondition] || 'default';\n    },\n  },\n  methods: {\n  async fetchWeather(e) {\n    if (e.key === 'Enter' && this.query.trim() !== '') {\n      this.errorMessage = '';\n      try {\n        const res = await fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`);\n        const data = await res.json();\n        if (data.cod !== 200) {\n          this.errorMessage = 'Location not found. Please try again.';\n          return;\n        }\n        this.weather = data;\n        await this.fetchAdditionalData();\n      } catch (err) {\n        this.errorMessage = 'Error fetching weather data. Please try again later.';\n        console.error(err);\n      }\n    }\n  },\n  async fetchAdditionalData() {\n    try {\n      const { lat, lon } = this.weather.coord;\n      const res = await fetch(`${this.url_base}onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=minutely,alerts&appid=${this.api_key}`);\n      const data = await res.json();\n      this.updateForecastData(data);\n      this.updateHourlyData(data);\n    } catch (err) {\n      this.errorMessage = 'Error fetching additional weather data.';\n      console.error(err);\n    }\n  },\n  updateForecastData(data) {\n    this.forecastData = data.daily.slice(0, 5).map(item => ({\n      day: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n      weather: item.weather[0].main,\n      high: item.temp.max,\n      low: item.temp.min,\n    }));\n  },\n  updateHourlyData(data) {\n    this.hourlyData = data.hourly.slice(0, 24).map(item => ({\n      time: new Date(item.dt * 1000).toLocaleTimeString(),\n      temp: item.temp,\n      rain: item.rain ? item.rain['1h'] : 0,\n    }));\n  },\n},\n\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n        this.$router.push({ name: 'SavedLocations' });\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      return now.toLocaleDateString('en-US', options);\n    },\n  };\n</script>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n#app {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.default {\n  background-image: url('./assets/default.jpg');\n}\n\n#app.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n#app.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n#app.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n#app.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n#app.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n#app.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n#app.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}