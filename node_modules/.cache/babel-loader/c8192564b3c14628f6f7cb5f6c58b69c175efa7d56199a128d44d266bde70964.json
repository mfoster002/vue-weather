{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: \"FiveDayForecast\",\n  props: {\n    location: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      forecastData: [],\n      errorMessage: \"\"\n    };\n  },\n  mounted() {\n    this.fetchForecastData();\n  },\n  goBack() {\n    if (window.history.length > 1) {\n      this.$router.go(-1);\n    } else {\n      this.$router.push(\"/\");\n    }\n  },\n  methods: {\n    fetchForecastData() {\n      const apiKey = '4df475f18aaaf4aba5fb2eb54246d4f8';\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.location}&units=imperial&appid=${apiKey}`;\n      fetch(url).then(response => response.json()).then(data => {\n        if (data.cod !== \"200\" || !data.list) {\n          this.errorMessage = \"Unable to fetch forecast data.\";\n          return;\n        }\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.forecastData = dailyData.map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString(\"en-US\", {\n            weekday: \"long\"\n          }),\n          weather: item.weather[0].main,\n          high: item.main.temp_max,\n          low: item.main.temp_min\n        }));\n      }).catch(error => {\n        console.error(error);\n        this.errorMessage = \"Error fetching forecast data.\";\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","location","type","String","required","data","forecastData","errorMessage","mounted","fetchForecastData","goBack","window","history","length","$router","go","push","methods","apiKey","url","fetch","then","response","json","cod","list","dailyData","filter","reading","dt_txt","includes","map","item","date","Date","dt","toLocaleDateString","weekday","weather","main","high","temp_max","low","temp_min","catch","error","console"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"forecastData.length\" class=\"forecast-table-card\">\n      <h2>{{ location }}'s 5 Day Forecast</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Day</th>\n            <th>Weather</th>\n            <th>High (°F)</th>\n            <th>Low (°F)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"day in forecastData\" :key=\"day.date\">\n            <td>{{ day.date }}</td>\n            <td>{{ day.weather }}</td>\n            <td>{{ day.high }}</td>\n            <td>{{ day.low }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button class=\"back-btn\" @click=\"goBack\">Go Back</button>\n    </div>\n    <p v-else-if=\"errorMessage\">{{ errorMessage }}</p>\n    <p v-else>Loading forecast...</p>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"FiveDayForecast\",\n  props: {\n    location: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      forecastData: [],\n      errorMessage: \"\",\n    };\n  },\n  mounted() {\n    this.fetchForecastData();\n  },\n  goBack() {\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    \n  methods: {\n    fetchForecastData() {\n      const apiKey = '4df475f18aaaf4aba5fb2eb54246d4f8';\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.location}&units=imperial&appid=${apiKey}`;\n\n      fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.cod !== \"200\" || !data.list) {\n            this.errorMessage = \"Unable to fetch forecast data.\";\n            return;\n          }\n          const dailyData = data.list.filter((reading) =>\n            reading.dt_txt.includes(\"18:00:00\")\n          );\n          this.forecastData = dailyData.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n            }),\n            weather: item.weather[0].main,\n            high: item.main.temp_max,\n            low: item.main.temp_min,\n          }));\n        })\n        .catch((error) => {\n          console.error(error);\n          this.errorMessage = \"Error fetching forecast data.\";\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.forecast-table-card {\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  text-align: center;\n  margin-top: 20px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\nth, td {\n  padding: 10px;\n  text-align: center;\n  border: 1px solid #ddd;\n}\nthead {\n  background-color: #f2f2f2;\n}\ntbody tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n .back-btn {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #008CBA;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n.back-btn:hover {\n  background-color: #005f73;\n}\n</style>\n<style scoped>\n.forecast-table-card {\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  text-align: center;\n  margin-top: 20px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\nth, td {\n  padding: 10px;\n  text-align: center;\n  border: 1px solid #ddd;\n}\nthead {\n  background-color: #f2f2f2;\n}\ntbody tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n .back-btn {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #008CBA;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n.back-btn:hover {\n  background-color: #005f73;\n}\n</style>"],"mappings":";;;;AA6BA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,MAAMA,CAAA,EAAG;IACL,IAAIC,MAAM,CAACC,OAAO,CAACC,MAAK,GAAI,CAAC,EAAE;MAC7B,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,OAAO;MACL,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;IACxB;EACF,CAAC;EAEHC,OAAO,EAAE;IACPR,iBAAiBA,CAAA,EAAG;MAClB,MAAMS,MAAK,GAAI,kCAAkC;MACjD,MAAMC,GAAE,GAAI,sDAAsD,IAAI,CAAClB,QAAQ,yBAAyBiB,MAAM,EAAE;MAEhHE,KAAK,CAACD,GAAG,EACNE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEhB,IAAI,IAAK;QACd,IAAIA,IAAI,CAACmB,GAAE,KAAM,KAAI,IAAK,CAACnB,IAAI,CAACoB,IAAI,EAAE;UACpC,IAAI,CAAClB,YAAW,GAAI,gCAAgC;UACpD;QACF;QACA,MAAMmB,SAAQ,GAAIrB,IAAI,CAACoB,IAAI,CAACE,MAAM,CAAEC,OAAO,IACzCA,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CACpC,CAAC;QACD,IAAI,CAACxB,YAAW,GAAIoB,SAAS,CAACK,GAAG,CAAEC,IAAI,KAAM;UAC3CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YACzDC,OAAO,EAAE;UACX,CAAC,CAAC;UACFC,OAAO,EAAEN,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;UAC7BC,IAAI,EAAER,IAAI,CAACO,IAAI,CAACE,QAAQ;UACxBC,GAAG,EAAEV,IAAI,CAACO,IAAI,CAACI;QACjB,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAACtC,YAAW,GAAI,+BAA+B;MACrD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}