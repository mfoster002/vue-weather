{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { Chart } from 'chart.js';\nimport { useRoute } from 'vue-router';\nexport default defineComponent({\n  name: 'FiveDayForecast',\n  setup() {\n    const route = useRoute(); // Access the query params from Vue Router\n    const location = ref(route.query.location || ''); // Get location from the query parameter\n    const forecastData = ref([]);\n    const errorMessage = ref('');\n    onMounted(() => {\n      if (location.value) {\n        fetchForecastData();\n      } else {\n        errorMessage.value = 'No location provided.';\n      }\n    });\n    const fetchForecastData = () => {\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=6c07b7050c30876a4e88cfbb4dee8dc3`).then(res => res.json()).then(data => {\n        if (data.cod !== '200') {\n          errorMessage.value = 'Unable to fetch forecast data.';\n          return;\n        }\n        forecastData.value = data.list.map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString(),\n          temp: item.main.temp\n        }));\n        createChart();\n      }).catch(err => {\n        errorMessage.value = 'Error fetching forecast data.';\n        console.error(err);\n      });\n    };\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map(item => item.date),\n          datasets: [{\n            label: 'Temperature (°F)',\n            data: forecastData.value.map(item => item.temp),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n    return {\n      location,\n      forecastData,\n      errorMessage\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","onMounted","Chart","useRoute","name","setup","route","location","query","forecastData","errorMessage","value","fetchForecastData","fetch","then","res","json","data","cod","list","map","item","date","Date","dt","toLocaleDateString","temp","main","createChart","catch","err","console","error","ctx","document","getElementById","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero"],"sources":["/Users/marianfoster/vue-weather/src/components/FiveDayForecast.vue"],"sourcesContent":["<template>\n<div class=\"five-day-forecast\">\n  <h2>{{ location }} - 5-Day Forecast</h2>\n  \n  <!-- Chart.js Bar Chart -->\n  <canvas id=\"forecast-chart\" width=\"400\" height=\"200\"></canvas>\n\n  <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n  \n</div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { Chart } from 'chart.js';\nimport { useRoute } from 'vue-router';\n\nexport default defineComponent({\n  name: 'FiveDayForecast',\n  setup() {\n    const route = useRoute(); // Access the query params from Vue Router\n    const location = ref(route.query.location || ''); // Get location from the query parameter\n    const forecastData = ref([]);\n    const errorMessage = ref('');\n\n    onMounted(() => {\n      if (location.value) {\n        fetchForecastData();\n      } else {\n        errorMessage.value = 'No location provided.';\n      }\n    });\n\n    const fetchForecastData = () => {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${location.value}&units=imperial&cnt=5&appid=6c07b7050c30876a4e88cfbb4dee8dc3`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.cod !== '200') {\n            errorMessage.value = 'Unable to fetch forecast data.';\n            return;\n          }\n          forecastData.value = data.list.map((item) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString(),\n            temp: item.main.temp,\n          }));\n          createChart();\n        })\n        .catch((err) => {\n          errorMessage.value = 'Error fetching forecast data.';\n          console.error(err);\n        });\n    };\n\n    const createChart = () => {\n      const ctx = document.getElementById('forecast-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: forecastData.value.map((item) => item.date),\n          datasets: [\n            {\n              label: 'Temperature (°F)',\n              data: forecastData.value.map((item) => item.temp),\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    return {\n      location,\n      forecastData,\n      errorMessage,\n    };\n  },\n});\n</script>\n<style scoped>\n.forecast-background {\n   background-image: url('@/assets/cloudy.jpg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n}\n\n.forecast-content {\n  padding: 20px;\n  text-align: center;\n}\n\n.five-day-forecast {\n  padding: 20px;\n  text-align: center;\n}\n\n.error-message {\n  color: red;\n  margin-top: 20px;\n}\n</style>\n\n\n"],"mappings":";AAcA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACrD,SAASC,KAAI,QAAS,UAAU;AAChC,SAASC,QAAO,QAAS,YAAY;AAErC,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC,EAAE;IAC1B,MAAMI,QAAO,GAAIP,GAAG,CAACM,KAAK,CAACE,KAAK,CAACD,QAAO,IAAK,EAAE,CAAC,EAAE;IAClD,MAAME,YAAW,GAAIT,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMU,YAAW,GAAIV,GAAG,CAAC,EAAE,CAAC;IAE5BC,SAAS,CAAC,MAAM;MACd,IAAIM,QAAQ,CAACI,KAAK,EAAE;QAClBC,iBAAiB,CAAC,CAAC;MACrB,OAAO;QACLF,YAAY,CAACC,KAAI,GAAI,uBAAuB;MAC9C;IACF,CAAC,CAAC;IAEF,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9BC,KAAK,CACH,sDAAsDN,QAAQ,CAACI,KAAK,8DACtE,EACGG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACxBF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,GAAE,KAAM,KAAK,EAAE;UACtBR,YAAY,CAACC,KAAI,GAAI,gCAAgC;UACrD;QACF;QACAF,YAAY,CAACE,KAAI,GAAIM,IAAI,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;UAC5CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAC,GAAI,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;UACnDC,IAAI,EAAEL,IAAI,CAACM,IAAI,CAACD;QAClB,CAAC,CAAC,CAAC;QACHE,WAAW,CAAC,CAAC;MACf,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdpB,YAAY,CAACC,KAAI,GAAI,+BAA+B;QACpDoB,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAED,MAAMF,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMK,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACtE,IAAIlC,KAAK,CAAC+B,GAAG,EAAE;QACbI,IAAI,EAAE,KAAK;QACXpB,IAAI,EAAE;UACJqB,MAAM,EAAE7B,YAAY,CAACE,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;UACnDiB,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,kBAAkB;YACzBvB,IAAI,EAAER,YAAY,CAACE,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,IAAI,CAAC;YACjDe,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLzC,QAAQ;MACRE,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}