{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"five-day-forecast\"\n};\nconst _hoisted_2 = {\n  ref: \"chart\",\n  class: \"weather-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"5-Day Weather Forecast for \" + _toDisplayString($props.location), 1 /* TEXT */), _createCommentVNode(\" Canvas element for Chart.js \"), _createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Back\")]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","location","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","goBack"],"sources":["/Users/marianfoster/vue-weather/src/views/5Day.vue"],"sourcesContent":["<template>\n  <div class=\"five-day-forecast\">\n    <h1>5-Day Weather Forecast for {{ location }}</h1>\n    <!-- Canvas element for Chart.js -->\n    <canvas ref=\"chart\" class=\"weather-chart\"></canvas>\n    <button @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js';\n\nexport default {\n  name: '5Day',\n  props: {\n    forecastData: {\n      type: Array,\n      required: true,\n    },\n    location: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      chart: null, // Chart.js instance\n    };\n  },\n  methods: {\n    drawChart() {\n      const ctx = this.$refs.chart.getContext('2d');\n      Chart.register(...registerables);\n\n      // Prepare the data for the chart\n      const labels = this.forecastData.map((day) => day.day);\n      const highTemps = this.forecastData.map((day) => day.high);\n      const lowTemps = this.forecastData.map((day) => day.low);\n\n      // Create the chart\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: 'High Temp (°F)',\n              data: highTemps,\n              backgroundColor: 'rgba(255, 99, 132, 0.5)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Low Temp (°F)',\n              data: lowTemps,\n              backgroundColor: 'rgba(54, 162, 235, 0.5)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top',\n            },\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Temperature (°F)',\n              },\n            },\n          },\n        },\n      });\n    },\n    goBack() {\n      this.$router.back(); // Go back to the previous page\n    },\n  },\n  mounted() {\n    // Draw the chart when the component is mounted\n    this.drawChart();\n  },\n};\n</script>\n\n<style scoped>\n.five-day-forecast {\n  text-align: center;\n  margin: 20px;\n}\n\n.weather-chart {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n</style>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EAGpBC,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC;;;uBAH5BE,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAAkD,YAA9C,6BAA2B,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,kBAC1CC,mBAAA,iCAAoC,EACpCJ,mBAAA,CAAmD,UAAnDK,UAAmD,+BACnDL,mBAAA,CAAqC;IAA5BM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}