{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport FiveDayForecast from '@/components/FiveDayForecast.vue';\nimport Hourly from '@/components/Hourly.vue';\nexport default {\n  name: 'App',\n  components: {\n    FiveDayForecast,\n    Hourly\n  },\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      hourlyData: [],\n      geoData: {},\n      savedLocations: [],\n      showForecast: false,\n      errorMessage: '' // Initialize errorMessage\n    };\n  },\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0]?.main?.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist'\n      };\n      return conditionMap[weatherCondition] || 'default';\n    }\n  },\n  methods: {\n    fetchWeather() {\n      if (this.query.trim() !== '') {\n        this.errorMessage = ''; // Reset error message before fetching data\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          if (data.cod !== 200) {\n            this.errorMessage = 'Location not found. Please try again.'; // Error handling\n            return;\n          }\n          this.weather = data;\n          this.fetchGeoData();\n          this.fetchForecastData();\n          this.fetchHourlyData();\n        }).catch(err => {\n          this.errorMessage = 'Error fetching weather data. Please try again later.'; // Catching network errors\n          console.error(err);\n        });\n      }\n    },\n    fetchHourlyData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}onecall?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&exclude=current,minutely,daily,alerts&appid=${this.api_key}`).then(res => res.json()).then(data => {\n          this.hourlyData = data.hourly;\n        }).catch(err => {\n          console.error('Error fetching hourly data:', err);\n          this.errorMessage = 'Error fetching hourly data.';\n        });\n      }\n    },\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`).then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          const {\n            name,\n            state,\n            country\n          } = data[0];\n          this.geoData = {\n            name,\n            state,\n            country\n          };\n        }\n      }).catch(err => {\n        console.error('Error fetching geo data:', err);\n        this.errorMessage = 'Error fetching geo data.';\n      });\n    },\n    fetchForecastData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}forecast?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&cnt=5&APPID=${this.api_key}`).then(res => res.json()).then(data => {\n          this.forecastData = data.list.map(item => ({\n            day: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n              weekday: 'long'\n            }),\n            high: item.main.temp_max,\n            low: item.main.temp_min\n          }));\n        }).catch(err => {\n          console.error('Error fetching forecast data:', err);\n          this.errorMessage = 'Error fetching forecast data.';\n        });\n      }\n    },\n    navigateTo5Day() {\n      if (this.weather.name && this.forecastData.length) {\n        this.showForecast = true;\n        localStorage.setItem('forecastData', JSON.stringify(this.forecastData));\n      } else {\n        this.errorMessage = 'Weather or forecast data is missing.';\n      }\n    },\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n      }\n    },\n    dateBuilder() {\n      const now = new Date();\n      const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return now.toLocaleDateString('en-US', options);\n    }\n  }\n};","map":{"version":3,"names":["FiveDayForecast","Hourly","name","components","data","api_key","url_base","query","weather","forecastData","hourlyData","geoData","savedLocations","showForecast","errorMessage","computed","weatherClass","weatherCondition","main","toLowerCase","conditionMap","clear","clouds","rain","drizzle","thunderstorm","snow","mist","haze","methods","fetchWeather","trim","fetch","then","res","json","cod","fetchGeoData","fetchForecastData","fetchHourlyData","catch","err","console","error","coord","lat","lon","hourly","length","state","country","list","map","item","day","Date","dt","toLocaleDateString","weekday","high","temp_max","low","temp_min","navigateTo5Day","localStorage","setItem","JSON","stringify","saveLocation","includes","push","dateBuilder","now","options","year","month"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div :class=\"['main-container', weatherClass]\">\n      <main>\n        <div class=\"search-box\">\n          <input \n            type=\"text\" \n            class=\"search-bar\" \n            placeholder=\"Search...\"\n            v-model=\"query\"\n            @keypress.enter=\"fetchWeather\" \n          />\n        </div>\n\n        <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n        <div class=\"weather-wrap\" v-if=\"weather.main && !errorMessage\">\n          <div class=\"location-box\">\n            <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n            <div class=\"date\">{{ dateBuilder() }}</div>\n          </div>\n\n          <div class=\"weather-box\">\n            <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°f</div>\n            <div class=\"weather\">{{ weather.weather[0].main }}</div>\n          </div>\n\n          <button @click=\"saveLocation\">Save Location</button>\n          <button @click=\"navigateTo5Day\">Go to 5-Day Forecast</button>\n\n          <Hourly v-if=\"hourlyData.length\" :hourly-data=\"hourlyData\" />\n          <FiveDayForecast \n            v-if=\"forecastData.length\" \n            :forecast-data=\"forecastData\" \n            :location=\"weather.name\" \n          />\n\n          <div v-if=\"savedLocations && savedLocations.length\">\n            <h3>Saved Locations:</h3>\n            <ul>\n              <li v-for=\"(location, index) in savedLocations\" :key=\"index\">{{ location }}</li>\n            </ul>\n          </div>\n        </div>  \n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FiveDayForecast from '@/components/FiveDayForecast.vue';\nimport Hourly from '@/components/Hourly.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    FiveDayForecast,\n    Hourly,\n  },\n  data() {\n    return {\n      api_key: '6c07b7050c30876a4e88cfbb4dee8dc3',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {},\n      forecastData: [],\n      hourlyData: [], \n      geoData: {},\n      savedLocations: [],\n      showForecast: false,\n      errorMessage: '', // Initialize errorMessage\n    };\n  },\n\n  computed: {\n    weatherClass() {\n      const weatherCondition = this.weather.weather ? this.weather.weather[0]?.main?.toLowerCase() : '';\n      const conditionMap = {\n        clear: 'clear',\n        clouds: 'clouds',\n        rain: 'rain',\n        drizzle: 'drizzle',\n        thunderstorm: 'thunderstorm',\n        snow: 'snow',\n        mist: 'mist',\n        haze: 'mist',\n      };\n\n      return conditionMap[weatherCondition] || 'default';\n    },\n  },\n\n  methods: {\n    fetchWeather() {\n      if (this.query.trim() !== '') {\n        this.errorMessage = ''; // Reset error message before fetching data\n        fetch(`${this.url_base}weather?q=${this.query}&units=imperial&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.cod !== 200) {\n              this.errorMessage = 'Location not found. Please try again.'; // Error handling\n              return;\n            }\n            this.weather = data;\n            this.fetchGeoData();\n            this.fetchForecastData();\n            this.fetchHourlyData();\n          })\n          .catch((err) => {\n            this.errorMessage = 'Error fetching weather data. Please try again later.'; // Catching network errors\n            console.error(err);\n          });\n      }\n    },\n\n    fetchHourlyData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}onecall?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&exclude=current,minutely,daily,alerts&appid=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.hourlyData = data.hourly;\n          })\n          .catch((err) => {\n            console.error('Error fetching hourly data:', err);\n            this.errorMessage = 'Error fetching hourly data.';\n          });\n      }\n    },\n\n    fetchGeoData() {\n      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=1&appid=${this.api_key}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            const { name, state, country } = data[0];\n            this.geoData = { name, state, country };\n          }\n        })\n        .catch((err) => {\n          console.error('Error fetching geo data:', err);\n          this.errorMessage = 'Error fetching geo data.';\n        });\n    },\n\n    fetchForecastData() {\n      if (this.weather.coord) {\n        fetch(`${this.url_base}forecast?lat=${this.weather.coord.lat}&lon=${this.weather.coord.lon}&units=imperial&cnt=5&APPID=${this.api_key}`)\n          .then((res) => res.json())\n          .then((data) => {\n            this.forecastData = data.list.map((item) => ({\n              day: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\n              high: item.main.temp_max,\n              low: item.main.temp_min,\n            }));\n          })\n          .catch((err) => {\n            console.error('Error fetching forecast data:', err);\n            this.errorMessage = 'Error fetching forecast data.';\n          });\n      }\n    },\n\n    navigateTo5Day() {\n      if (this.weather.name && this.forecastData.length) {\n        this.showForecast = true;\n        localStorage.setItem('forecastData', JSON.stringify(this.forecastData));\n      } else {\n        this.errorMessage = 'Weather or forecast data is missing.';\n      }\n    },\n\n    saveLocation() {\n      if (this.weather.name && !this.savedLocations.includes(this.weather.name)) {\n        this.savedLocations.push(this.weather.name);\n      }\n    },\n\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      return now.toLocaleDateString('en-US', options);\n    },\n  },\n};\n</script>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n.main-container {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n.main-container.default {\n  background-image: url('./assets/default.jpg');\n}\n\n.main-container.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n.main-container.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n.main-container.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n.main-container.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n.main-container.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n.main-container.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n.main-container.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}