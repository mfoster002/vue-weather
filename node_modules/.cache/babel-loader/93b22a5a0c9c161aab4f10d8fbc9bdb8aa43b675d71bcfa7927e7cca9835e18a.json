{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"weather-wrap\"\n};\nconst _hoisted_4 = {\n  class: \"location-box\"\n};\nconst _hoisted_5 = {\n  class: \"location\"\n};\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"weather-box\"\n};\nconst _hoisted_8 = {\n  class: \"temp\"\n};\nconst _hoisted_9 = {\n  class: \"weather\"\n};\nexport function render(_ctx, _cache) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(_ctx.weatherClass),\n    id: \"app\"\n  }, [_createElementVNode(\"main\", null, [_createCommentVNode(\" Search Bar Always Visible \"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-bar\",\n    placeholder: \"Search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.query = $event),\n    onKeypress: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.fetchWeather && _ctx.fetchWeather(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.query]])]), _createCommentVNode(\" Error Message (Global) \"), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display Weather Info ONLY on Home \"), _ctx.weather.main && !_ctx.errorMessage && _ctx.$route.name === 'Home' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.weather.name) + \", \" + _toDisplayString(_ctx.geoData.state) + \", \" + _toDisplayString(_ctx.weather.sys.country), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.dateBuilder()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(Math.round(_ctx.weather.main.temp)) + \"°F\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.weather.weather[0].main), 1 /* TEXT */)]), _createCommentVNode(\" Button to save the current location \"), _ctx.weather.main ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.saveLocation && _ctx.saveLocation(...args))\n  }, \"Save Location\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Nav Buttons (Only on Home) \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.goToMySavedLocations && _ctx.goToMySavedLocations(...args))\n  }, \"View Saved Locations\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.goToHourlyForecast && _ctx.goToHourlyForecast(...args))\n  }, \"View Hourly Forecast\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.goToFiveDayForecast && _ctx.goToFiveDayForecast(...args))\n  }, \"View 5-Day Forecast\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Dynamic Page Content \"), _createVNode(_component_router_view)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_normalizeClass","_ctx","weatherClass","id","_createElementVNode","_createCommentVNode","_hoisted_1","type","placeholder","_cache","$event","query","onKeypress","_withKeys","args","fetchWeather","errorMessage","_hoisted_2","_toDisplayString","weather","main","$route","name","_hoisted_3","_hoisted_4","_hoisted_5","geoData","state","sys","country","_hoisted_6","dateBuilder","_hoisted_7","_hoisted_8","Math","round","temp","_hoisted_9","onClick","saveLocation","goToMySavedLocations","goToHourlyForecast","goToFiveDayForecast","_createVNode","_component_router_view"],"sources":["/Users/marianfoster/vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"weatherClass\" id=\"app\">\n    <main>\n      <!-- Search Bar Always Visible -->\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-bar\"\n          placeholder=\"Search...\"\n          v-model=\"query\"\n          @keypress.enter=\"fetchWeather\"\n        />\n      </div>\n\n      <!-- Error Message (Global) -->\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n      <!-- Display Weather Info ONLY on Home -->\n      <div \n        v-if=\"weather.main && !errorMessage && $route.name === 'Home'\" \n        class=\"weather-wrap\"\n      >\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }}, {{ geoData.state }}, {{ weather.sys.country }}\n          </div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}°F</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n        <!-- Button to save the current location -->\n<button v-if=\"weather.main\" @click=\"saveLocation\">Save Location</button>\n        <!-- Nav Buttons (Only on Home) -->\n        <button @click=\"goToMySavedLocations\">View Saved Locations</button>\n        <button @click=\"goToHourlyForecast\">View Hourly Forecast</button>\n        <button @click=\"goToFiveDayForecast\">View 5-Day Forecast</button>\n      </div>\n      <!-- Dynamic Page Content -->\n      <router-view></router-view>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      api_key: \"4df475f18aaaf4aba5fb2eb54246d4f8\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {},\n      geoData: {},\n      savedLocations: [],\n      errorMessage: \"\",\n    };\n  },\n  computed: {\n    weatherClass() {\n      if (!this.weather.weather) return \"default\";\n      const weatherCondition = this.weather.weather[0].main.toLowerCase();\n      const conditionMap = {\n        clear: \"clear\",\n        clouds: \"clouds\",\n        rain: \"rain\",\n        drizzle: \"drizzle\",\n        thunderstorm: \"thunderstorm\",\n        snow: \"snow\",\n        mist: \"mist\",\n      };\n      return conditionMap[weatherCondition] || \"default\";\n    },\n  },\n  methods: {\n    fetchWeather() {\n      if (this.query.trim() !== \"\") {\n        this.errorMessage = \"\";\n        fetch(\n          `${this.url_base}weather?q=${this.query}&units=imperial&appid=${this.api_key}`\n        )\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.cod !== 200) {\n              this.errorMessage = \"Location not found. Please try again.\";\n              return;\n            }\n            this.weather = data;\n            this.fetchGeoData();\n          })\n          .catch((err) => {\n            this.errorMessage = \"Error fetching weather data. Please try again.\";\n            console.error(err);\n          });\n      }\n    },\n    fetchGeoData() {\n      fetch(\n        `https://api.openweathermap.org/geo/1.0/direct?q=${this.weather.name}&limit=1&appid=${this.api_key}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            const { name, state, country } = data[0];\n            this.geoData = { name, state, country };\n          }\n        })\n        .catch((err) => {\n          console.error(\"Error fetching geo data:\", err);\n          this.errorMessage = \"Error fetching geo data.\";\n        });\n    },\n     saveLocation() {\n    if (!this.weather.name) return;\n\n    // Retrieve current saved locations\n    const saved = localStorage.getItem(\"savedLocations\");\n    const savedLocations = saved ? JSON.parse(saved) : [];\n\n    // Check if the location is already saved\n    const exists = savedLocations.find(\n      (loc) => loc.name === this.weather.name && loc.country === this.weather.sys.country\n    );\n\n    if (!exists) {\n      const newLocation = {\n        name: this.weather.name,\n        country: this.weather.sys.country,\n        temp: this.weather.main.temp,\n        weather: this.weather.weather[0].main,\n      };\n      savedLocations.push(newLocation);\n\n      // Save back to localStorage\n      localStorage.setItem(\"savedLocations\", JSON.stringify(savedLocations));\n      alert(`${this.weather.name} saved to your locations.`);\n    } else {\n      alert(`${this.weather.name} is already in your saved locations.`);\n    }\n  },\n},\n    dateBuilder() {\n      const now = new Date();\n      const options = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\" };\n      return now.toLocaleDateString(\"en-US\", options);\n    }, \n    \n    goToMySavedLocations() {\n    this.$router.push({ name: \"MySavedLocations\" });\n  },\n    goToHourlyForecast() {\n      if (this.weather.coord) {\n        this.$router.push({\n          name: \"HourlyForecast\",\n          params: { location: this.weather.name },\n          query: { lat: this.weather.coord.lat, lon: this.weather.coord.lon },\n        });\n      } else {\n        this.errorMessage = \"Weather data is incomplete. Please try again.\";\n      }\n    },\n    goToFiveDayForecast() {\n      if (this.weather.name) {\n        this.$router.push({\n          name: \"FiveDayForecast\",\n          params: { location: this.weather.name },\n        });\n      } else {\n        this.errorMessage = \"Weather data is incomplete. Please try again.\";\n      }\n    },\n  },\n  mounted() {\n    const saved = localStorage.getItem(\"savedLocations\");\n    this.savedLocations = saved ? JSON.parse(saved) : [];\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n#app {\n  background-image: url('./assets/default.jpg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.default {\n  background-image: url('./assets/default.jpg');\n}\n\n#app.clouds {\n  background-image: url('./assets/cloudy.jpg');\n}\n\n#app.clear {\n  background-image: url('./assets/sunny.jpg');\n}\n\n#app.mist {\n  background-image: url('./assets/fog.jpg');\n}\n\n#app.snow {\n  background-image: url('./assets/snow.jpg');\n}\n\n#app.rain {\n  background-image: url('./assets/rain.jpg');\n}\n\n#app.drizzle {\n  background-image: url('./assets/drizzle.jpg');\n}\n\n#app.thunderstorm {\n  background-image: url('./assets/thunderstorm.jpg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #FFF;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color:rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}