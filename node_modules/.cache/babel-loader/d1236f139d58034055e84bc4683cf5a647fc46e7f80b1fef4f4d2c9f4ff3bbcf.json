{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hourly-forecast-container\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Hourly Forecast for \" + _toDisplayString(_ctx.location), 1 /* TEXT */), _ctx.hourlyData.length ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"No hourly data available.\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.goBack && _ctx.goBack(...args))\n  }, \"Back\")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","location","hourlyData","length","_createBlock","_component_Bar","data","chartData","options","chartOptions","_hoisted_2","onClick","_cache","args","goBack"],"sources":["/Users/marianfoster/vue-weather/src/views/HourlyForecast.vue"],"sourcesContent":["<template>\n  <div class=\"hourly-forecast-container\">\n    <h2>Hourly Forecast for {{ location }}</h2>\n    <Bar :data=\"chartData\" :options=\"chartOptions\" v-if=\"hourlyData.length\" />\n    <p v-else>No hourly data available.</p>\n    <button @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  name: 'HourlyForecast',\n  components: { Bar },\n  props: { location: { type: String, required: true } },\n  data() {\n    return {\n      hourlyData: [],\n      chartData: { labels: [], datasets: [] },\n      chartOptions: { responsive: true, scales: { y: { beginAtZero: true } } },\n    };\n  },\n  mounted() {\n    this.fetchHourlyData();\n  },\n  methods: {\n    fetchHourlyData() {\n      const apiKey = '6c07b7050c30876a4e88cfbb4dee8dc3';\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=51.5085&lon=-0.1257&units=imperial&exclude=current,minutely,daily,alerts&appid=${apiKey}`;\n      fetch(url)\n        .then((res) => res.json())\n        .then(\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EADxCC,GAAA;AAAA;;;uBACEC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAA2C,YAAvC,sBAAoB,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,QAAQ,kBACkBD,IAAA,CAAAE,UAAU,CAACC,MAAM,I,cAAtEC,YAAA,CAA0EC,cAAA;IAH9EV,GAAA;IAGUW,IAAI,EAAEN,IAAA,CAAAO,SAAS;IAAGC,OAAO,EAAER,IAAA,CAAAS;iEACjCb,mBAAA,CAAuC,KAJ3Cc,UAAA,EAIc,2BAAyB,IACnCZ,mBAAA,CAAqC;IAA5Ba,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,IAAA,CAAAc,MAAA,IAAAd,IAAA,CAAAc,MAAA,IAAAD,IAAA,CAAM;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}